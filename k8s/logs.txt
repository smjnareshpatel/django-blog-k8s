
==> Audit <==
|---------|-----------------|----------|--------|---------|---------------------|---------------------|
| Command |      Args       | Profile  |  User  | Version |     Start Time      |      End Time       |
|---------|-----------------|----------|--------|---------|---------------------|---------------------|
| start   | --driver=docker | minikube | naresh | v1.36.0 | 01 Jul 25 10:43 IST |                     |
| start   | --driver=docker | minikube | naresh | v1.36.0 | 01 Jul 25 21:16 IST | 01 Jul 25 21:20 IST |
| service | django-service  | minikube | naresh | v1.36.0 | 01 Jul 25 21:23 IST |                     |
| service | django-service  | minikube | naresh | v1.36.0 | 01 Jul 25 21:23 IST |                     |
|---------|-----------------|----------|--------|---------|---------------------|---------------------|


==> Last Start <==
Log file created at: 2025/07/01 21:16:25
Running on machine: naresh-HP-348-G4
Binary: Built with gc go1.24.0 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0701 21:16:25.685380 1604837 out.go:345] Setting OutFile to fd 1 ...
I0701 21:16:25.685639 1604837 out.go:397] isatty.IsTerminal(1) = true
I0701 21:16:25.685642 1604837 out.go:358] Setting ErrFile to fd 2...
I0701 21:16:25.685647 1604837 out.go:397] isatty.IsTerminal(2) = true
I0701 21:16:25.685837 1604837 root.go:338] Updating PATH: /home/naresh/.minikube/bin
W0701 21:16:25.685934 1604837 root.go:314] Error reading config file at /home/naresh/.minikube/config/config.json: open /home/naresh/.minikube/config/config.json: no such file or directory
I0701 21:16:25.686247 1604837 out.go:352] Setting JSON to false
I0701 21:16:25.687601 1604837 start.go:130] hostinfo: {"hostname":"naresh-HP-348-G4","uptime":2183771,"bootTime":1749201015,"procs":361,"os":"linux","platform":"ubuntu","platformFamily":"debian","platformVersion":"24.04","kernelVersion":"6.11.0-26-generic","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"","hostId":"26adbf6d-c1a9-4d80-af50-3abb82560325"}
I0701 21:16:25.687653 1604837 start.go:140] virtualization:  
I0701 21:16:25.689089 1604837 out.go:177] 😄  minikube v1.36.0 on Ubuntu 24.04
I0701 21:16:25.691603 1604837 driver.go:404] Setting default libvirt URI to qemu:///system
I0701 21:16:25.691676 1604837 notify.go:220] Checking for updates...
I0701 21:16:25.718558 1604837 docker.go:123] docker version: linux-28.2.2:Docker Engine - Community
I0701 21:16:25.718674 1604837 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0701 21:16:25.781276 1604837 info.go:266] docker info: {ID:dda90ed0-f56f-41c6-9eed-02882e8c8458 Containers:21 ContainersRunning:1 ContainersPaused:0 ContainersStopped:20 Images:17 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:34 OomKillDisable:false NGoroutines:54 SystemTime:2025-07-01 21:16:25.770664435 +0530 IST LoggingDriver:json-file CgroupDriver:systemd NEventsListener:0 KernelVersion:6.11.0-26-generic OperatingSystem:Ubuntu 24.04.2 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[::1/128 127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:16683356160 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:naresh-HP-348-G4 Labels:[] ExperimentalBuild:false ServerVersion:28.2.2 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:05044ec0a9a75232cad458027ca83437aae3f4da Expected:} RuncCommit:{ID:v1.2.5-0-g59923ef Expected:} InitCommit:{ID:de40ad0 Expected:} SecurityOptions:[name=apparmor name=seccomp,profile=builtin name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.24.0] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.36.2]] Warnings:<nil>}}
I0701 21:16:25.781397 1604837 docker.go:318] overlay module found
I0701 21:16:25.782773 1604837 out.go:177] ✨  Using the docker driver based on user configuration
I0701 21:16:25.785761 1604837 start.go:304] selected driver: docker
I0701 21:16:25.785768 1604837 start.go:908] validating driver "docker" against <nil>
I0701 21:16:25.785778 1604837 start.go:919] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0701 21:16:25.785896 1604837 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0701 21:16:25.838757 1604837 info.go:266] docker info: {ID:dda90ed0-f56f-41c6-9eed-02882e8c8458 Containers:21 ContainersRunning:1 ContainersPaused:0 ContainersStopped:20 Images:17 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:34 OomKillDisable:false NGoroutines:54 SystemTime:2025-07-01 21:16:25.828694605 +0530 IST LoggingDriver:json-file CgroupDriver:systemd NEventsListener:0 KernelVersion:6.11.0-26-generic OperatingSystem:Ubuntu 24.04.2 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[::1/128 127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:16683356160 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:naresh-HP-348-G4 Labels:[] ExperimentalBuild:false ServerVersion:28.2.2 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:05044ec0a9a75232cad458027ca83437aae3f4da Expected:} RuncCommit:{ID:v1.2.5-0-g59923ef Expected:} InitCommit:{ID:de40ad0 Expected:} SecurityOptions:[name=apparmor name=seccomp,profile=builtin name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.24.0] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.36.2]] Warnings:<nil>}}
I0701 21:16:25.838901 1604837 start_flags.go:311] no existing cluster config was found, will generate one from the flags 
I0701 21:16:25.839406 1604837 start_flags.go:394] Using suggested 3900MB memory alloc based on sys=15910MB, container=15910MB
I0701 21:16:25.839567 1604837 start_flags.go:958] Wait components to verify : map[apiserver:true system_pods:true]
I0701 21:16:25.841079 1604837 out.go:177] 📌  Using Docker driver with root privileges
I0701 21:16:25.842355 1604837 cni.go:84] Creating CNI manager for ""
I0701 21:16:25.842494 1604837 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0701 21:16:25.842505 1604837 start_flags.go:320] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I0701 21:16:25.842607 1604837 start.go:347] cluster config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b Memory:3900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.33.1 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/naresh:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0701 21:16:25.844444 1604837 out.go:177] 👍  Starting "minikube" primary control-plane node in "minikube" cluster
I0701 21:16:25.846374 1604837 cache.go:121] Beginning downloading kic base image for docker with docker
I0701 21:16:25.847772 1604837 out.go:177] 🚜  Pulling base image v0.0.47 ...
I0701 21:16:25.849045 1604837 preload.go:131] Checking if preload exists for k8s version v1.33.1 and runtime docker
I0701 21:16:25.849185 1604837 image.go:81] Checking for gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b in local docker daemon
I0701 21:16:25.876322 1604837 image.go:100] Found gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b in local docker daemon, skipping pull
I0701 21:16:25.876330 1604837 cache.go:145] gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b exists in daemon, skipping load
I0701 21:16:26.449966 1604837 preload.go:118] Found remote preload: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.33.1/preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4
I0701 21:16:26.449977 1604837 cache.go:56] Caching tarball of preloaded images
I0701 21:16:26.450079 1604837 preload.go:131] Checking if preload exists for k8s version v1.33.1 and runtime docker
I0701 21:16:26.451424 1604837 out.go:177] 💾  Downloading Kubernetes v1.33.1 preload ...
I0701 21:16:26.453581 1604837 preload.go:236] getting checksum for preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4 ...
I0701 21:16:26.929880 1604837 download.go:108] Downloading: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.33.1/preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4?checksum=md5:426761ca53f0b79ef3d0619b4605274e -> /home/naresh/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4
I0701 21:19:50.601008 1604837 preload.go:247] saving checksum for preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4 ...
I0701 21:19:50.601079 1604837 preload.go:254] verifying checksum of /home/naresh/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4 ...
I0701 21:19:51.303318 1604837 cache.go:59] Finished verifying existence of preloaded tar for v1.33.1 on docker
I0701 21:19:51.303625 1604837 profile.go:143] Saving config to /home/naresh/.minikube/profiles/minikube/config.json ...
I0701 21:19:51.303644 1604837 lock.go:35] WriteFile acquiring /home/naresh/.minikube/profiles/minikube/config.json: {Name:mk68f48aa7e15656fb80322503a8dd5b5c102de3 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0701 21:19:51.303744 1604837 cache.go:230] Successfully downloaded all kic artifacts
I0701 21:19:51.303756 1604837 start.go:360] acquireMachinesLock for minikube: {Name:mk9dc8ee575afcee7b1e5a59d7ec77b8eddf2d9f Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0701 21:19:51.303778 1604837 start.go:364] duration metric: took 15.994µs to acquireMachinesLock for "minikube"
I0701 21:19:51.303792 1604837 start.go:93] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b Memory:3900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.33.1 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/naresh:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} &{Name: IP: Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}
I0701 21:19:51.303834 1604837 start.go:125] createHost starting for "" (driver="docker")
I0701 21:19:51.308594 1604837 out.go:235] 🔥  Creating docker container (CPUs=2, Memory=3900MB) ...
I0701 21:19:51.308882 1604837 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0701 21:19:51.308903 1604837 client.go:168] LocalClient.Create starting
I0701 21:19:51.309048 1604837 main.go:141] libmachine: Creating CA: /home/naresh/.minikube/certs/ca.pem
I0701 21:19:51.760010 1604837 main.go:141] libmachine: Creating client certificate: /home/naresh/.minikube/certs/cert.pem
I0701 21:19:51.792838 1604837 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0701 21:19:51.811364 1604837 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0701 21:19:51.811474 1604837 network_create.go:284] running [docker network inspect minikube] to gather additional debugging logs...
I0701 21:19:51.811497 1604837 cli_runner.go:164] Run: docker network inspect minikube
W0701 21:19:51.828413 1604837 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0701 21:19:51.828426 1604837 network_create.go:287] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0701 21:19:51.828434 1604837 network_create.go:289] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0701 21:19:51.828521 1604837 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0701 21:19:51.844549 1604837 network.go:206] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc001418d80}
I0701 21:19:51.844571 1604837 network_create.go:124] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0701 21:19:51.844632 1604837 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0701 21:19:51.984382 1604837 network_create.go:108] docker network minikube 192.168.49.0/24 created
I0701 21:19:51.984411 1604837 kic.go:121] calculated static IP "192.168.49.2" for the "minikube" container
I0701 21:19:51.984507 1604837 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0701 21:19:52.009380 1604837 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0701 21:19:52.029635 1604837 oci.go:103] Successfully created a docker volume minikube
I0701 21:19:52.029711 1604837 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b -d /var/lib
I0701 21:19:53.078076 1604837 cli_runner.go:217] Completed: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b -d /var/lib: (1.048330105s)
I0701 21:19:53.078090 1604837 oci.go:107] Successfully prepared a docker volume minikube
I0701 21:19:53.078103 1604837 preload.go:131] Checking if preload exists for k8s version v1.33.1 and runtime docker
I0701 21:19:53.078117 1604837 kic.go:194] Starting extracting preloaded images to volume ...
I0701 21:19:53.078175 1604837 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v /home/naresh/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b -I lz4 -xf /preloaded.tar -C /extractDir
I0701 21:19:56.687871 1604837 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v /home/naresh/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b -I lz4 -xf /preloaded.tar -C /extractDir: (3.609659806s)
I0701 21:19:56.687887 1604837 kic.go:203] duration metric: took 3.609767396s to extract preloaded images to volume ...
W0701 21:19:56.687968 1604837 cgroups_linux.go:77] Your kernel does not support swap limit capabilities or the cgroup is not mounted.
W0701 21:19:56.687999 1604837 oci.go:249] Your kernel does not support CPU cfs period/quota or the cgroup is not mounted.
I0701 21:19:56.688047 1604837 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0701 21:19:56.744518 1604837 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=3900mb -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b
I0701 21:19:57.101977 1604837 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0701 21:19:57.121543 1604837 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0701 21:19:57.142496 1604837 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0701 21:19:57.194302 1604837 oci.go:144] the created container "minikube" has a running status.
I0701 21:19:57.194316 1604837 kic.go:225] Creating ssh key for kic: /home/naresh/.minikube/machines/minikube/id_rsa...
I0701 21:19:57.441663 1604837 kic_runner.go:191] docker (temp): /home/naresh/.minikube/machines/minikube/id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0701 21:19:57.492959 1604837 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0701 21:19:57.512444 1604837 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0701 21:19:57.512456 1604837 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0701 21:19:57.611102 1604837 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0701 21:19:57.662566 1604837 machine.go:93] provisionDockerMachine start ...
I0701 21:19:57.662706 1604837 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0701 21:19:57.687611 1604837 main.go:141] libmachine: Using SSH client type: native
I0701 21:19:57.687844 1604837 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x83bb20] 0x83e820 <nil>  [] 0s} 127.0.0.1 32778 <nil> <nil>}
I0701 21:19:57.687853 1604837 main.go:141] libmachine: About to run SSH command:
hostname
I0701 21:19:57.854013 1604837 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0701 21:19:57.854027 1604837 ubuntu.go:169] provisioning hostname "minikube"
I0701 21:19:57.854106 1604837 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0701 21:19:57.883976 1604837 main.go:141] libmachine: Using SSH client type: native
I0701 21:19:57.884253 1604837 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x83bb20] 0x83e820 <nil>  [] 0s} 127.0.0.1 32778 <nil> <nil>}
I0701 21:19:57.884268 1604837 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0701 21:19:58.058371 1604837 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0701 21:19:58.058447 1604837 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0701 21:19:58.079211 1604837 main.go:141] libmachine: Using SSH client type: native
I0701 21:19:58.079508 1604837 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x83bb20] 0x83e820 <nil>  [] 0s} 127.0.0.1 32778 <nil> <nil>}
I0701 21:19:58.079530 1604837 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0701 21:19:58.209480 1604837 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0701 21:19:58.209495 1604837 ubuntu.go:175] set auth options {CertDir:/home/naresh/.minikube CaCertPath:/home/naresh/.minikube/certs/ca.pem CaPrivateKeyPath:/home/naresh/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/naresh/.minikube/machines/server.pem ServerKeyPath:/home/naresh/.minikube/machines/server-key.pem ClientKeyPath:/home/naresh/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/naresh/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/naresh/.minikube}
I0701 21:19:58.209512 1604837 ubuntu.go:177] setting up certificates
I0701 21:19:58.209518 1604837 provision.go:84] configureAuth start
I0701 21:19:58.209576 1604837 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0701 21:19:58.227518 1604837 provision.go:143] copyHostCerts
I0701 21:19:58.227577 1604837 exec_runner.go:151] cp: /home/naresh/.minikube/certs/ca.pem --> /home/naresh/.minikube/ca.pem (1078 bytes)
I0701 21:19:58.227703 1604837 exec_runner.go:151] cp: /home/naresh/.minikube/certs/cert.pem --> /home/naresh/.minikube/cert.pem (1123 bytes)
I0701 21:19:58.227768 1604837 exec_runner.go:151] cp: /home/naresh/.minikube/certs/key.pem --> /home/naresh/.minikube/key.pem (1671 bytes)
I0701 21:19:58.227820 1604837 provision.go:117] generating server cert: /home/naresh/.minikube/machines/server.pem ca-key=/home/naresh/.minikube/certs/ca.pem private-key=/home/naresh/.minikube/certs/ca-key.pem org=naresh.minikube san=[127.0.0.1 192.168.49.2 localhost minikube]
I0701 21:19:58.289202 1604837 provision.go:177] copyRemoteCerts
I0701 21:19:58.289263 1604837 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0701 21:19:58.289301 1604837 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0701 21:19:58.306436 1604837 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32778 SSHKeyPath:/home/naresh/.minikube/machines/minikube/id_rsa Username:docker}
I0701 21:19:58.399148 1604837 ssh_runner.go:362] scp /home/naresh/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1078 bytes)
I0701 21:19:58.430297 1604837 ssh_runner.go:362] scp /home/naresh/.minikube/machines/server.pem --> /etc/docker/server.pem (1180 bytes)
I0701 21:19:58.459596 1604837 ssh_runner.go:362] scp /home/naresh/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0701 21:19:58.486825 1604837 provision.go:87] duration metric: took 277.296081ms to configureAuth
I0701 21:19:58.486838 1604837 ubuntu.go:193] setting minikube options for container-runtime
I0701 21:19:58.486970 1604837 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.33.1
I0701 21:19:58.487016 1604837 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0701 21:19:58.503725 1604837 main.go:141] libmachine: Using SSH client type: native
I0701 21:19:58.503930 1604837 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x83bb20] 0x83e820 <nil>  [] 0s} 127.0.0.1 32778 <nil> <nil>}
I0701 21:19:58.503942 1604837 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0701 21:19:58.633799 1604837 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0701 21:19:58.633813 1604837 ubuntu.go:71] root file system type: overlay
I0701 21:19:58.633940 1604837 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I0701 21:19:58.634014 1604837 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0701 21:19:58.652894 1604837 main.go:141] libmachine: Using SSH client type: native
I0701 21:19:58.653089 1604837 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x83bb20] 0x83e820 <nil>  [] 0s} 127.0.0.1 32778 <nil> <nil>}
I0701 21:19:58.653274 1604837 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %s "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0701 21:19:58.833911 1604837 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0701 21:19:58.833996 1604837 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0701 21:19:58.852365 1604837 main.go:141] libmachine: Using SSH client type: native
I0701 21:19:58.852576 1604837 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x83bb20] 0x83e820 <nil>  [] 0s} 127.0.0.1 32778 <nil> <nil>}
I0701 21:19:58.852606 1604837 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0701 21:20:00.168946 1604837 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2025-04-18 09:50:48.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2025-07-01 15:49:58.830871551 +0000
@@ -1,46 +1,49 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target nss-lookup.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
+LimitNOFILE=infinity
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0701 21:20:00.168965 1604837 machine.go:96] duration metric: took 2.506384992s to provisionDockerMachine
I0701 21:20:00.168974 1604837 client.go:171] duration metric: took 8.860065992s to LocalClient.Create
I0701 21:20:00.168991 1604837 start.go:167] duration metric: took 8.860111028s to libmachine.API.Create "minikube"
I0701 21:20:00.168997 1604837 start.go:293] postStartSetup for "minikube" (driver="docker")
I0701 21:20:00.169008 1604837 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0701 21:20:00.169089 1604837 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0701 21:20:00.169149 1604837 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0701 21:20:00.188557 1604837 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32778 SSHKeyPath:/home/naresh/.minikube/machines/minikube/id_rsa Username:docker}
I0701 21:20:00.287506 1604837 ssh_runner.go:195] Run: cat /etc/os-release
I0701 21:20:00.291246 1604837 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0701 21:20:00.291275 1604837 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0701 21:20:00.291287 1604837 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0701 21:20:00.291292 1604837 info.go:137] Remote host: Ubuntu 22.04.5 LTS
I0701 21:20:00.291300 1604837 filesync.go:126] Scanning /home/naresh/.minikube/addons for local assets ...
I0701 21:20:00.291354 1604837 filesync.go:126] Scanning /home/naresh/.minikube/files for local assets ...
I0701 21:20:00.291377 1604837 start.go:296] duration metric: took 122.37564ms for postStartSetup
I0701 21:20:00.291685 1604837 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0701 21:20:00.310612 1604837 profile.go:143] Saving config to /home/naresh/.minikube/profiles/minikube/config.json ...
I0701 21:20:00.310878 1604837 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0701 21:20:00.310920 1604837 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0701 21:20:00.329449 1604837 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32778 SSHKeyPath:/home/naresh/.minikube/machines/minikube/id_rsa Username:docker}
I0701 21:20:00.419830 1604837 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0701 21:20:00.424382 1604837 start.go:128] duration metric: took 9.120537003s to createHost
I0701 21:20:00.424395 1604837 start.go:83] releasing machines lock for "minikube", held for 9.12061114s
I0701 21:20:00.424462 1604837 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0701 21:20:00.442667 1604837 ssh_runner.go:195] Run: cat /version.json
I0701 21:20:00.442688 1604837 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0701 21:20:00.442721 1604837 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0701 21:20:00.442750 1604837 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0701 21:20:00.465568 1604837 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32778 SSHKeyPath:/home/naresh/.minikube/machines/minikube/id_rsa Username:docker}
I0701 21:20:00.467902 1604837 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32778 SSHKeyPath:/home/naresh/.minikube/machines/minikube/id_rsa Username:docker}
I0701 21:20:01.072363 1604837 ssh_runner.go:195] Run: systemctl --version
I0701 21:20:01.077067 1604837 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0701 21:20:01.081790 1604837 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0701 21:20:01.114500 1604837 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0701 21:20:01.114565 1604837 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%p, " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0701 21:20:01.143722 1604837 cni.go:262] disabled [/etc/cni/net.d/100-crio-bridge.conf, /etc/cni/net.d/87-podman-bridge.conflist] bridge cni config(s)
I0701 21:20:01.143736 1604837 start.go:495] detecting cgroup driver to use...
I0701 21:20:01.143765 1604837 detect.go:190] detected "systemd" cgroup driver on host os
I0701 21:20:01.143834 1604837 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0701 21:20:01.163028 1604837 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.10"|' /etc/containerd/config.toml"
I0701 21:20:01.175489 1604837 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0701 21:20:01.186883 1604837 containerd.go:146] configuring containerd to use "systemd" as cgroup driver...
I0701 21:20:01.186943 1604837 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = true|g' /etc/containerd/config.toml"
I0701 21:20:01.198421 1604837 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0701 21:20:01.209353 1604837 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0701 21:20:01.220313 1604837 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0701 21:20:01.231444 1604837 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0701 21:20:01.241967 1604837 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0701 21:20:01.253554 1604837 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I0701 21:20:01.266067 1604837 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I0701 21:20:01.277383 1604837 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0701 21:20:01.288029 1604837 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0701 21:20:01.297681 1604837 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0701 21:20:01.383598 1604837 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0701 21:20:01.477253 1604837 start.go:495] detecting cgroup driver to use...
I0701 21:20:01.477283 1604837 detect.go:190] detected "systemd" cgroup driver on host os
I0701 21:20:01.477340 1604837 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0701 21:20:01.495885 1604837 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0701 21:20:01.495984 1604837 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0701 21:20:01.512754 1604837 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0701 21:20:01.534113 1604837 ssh_runner.go:195] Run: which cri-dockerd
I0701 21:20:01.539300 1604837 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0701 21:20:01.552285 1604837 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (190 bytes)
I0701 21:20:01.575860 1604837 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0701 21:20:01.665126 1604837 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0701 21:20:01.759408 1604837 docker.go:587] configuring docker to use "systemd" as cgroup driver...
I0701 21:20:01.759528 1604837 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (129 bytes)
I0701 21:20:01.783893 1604837 ssh_runner.go:195] Run: sudo systemctl reset-failed docker
I0701 21:20:01.796542 1604837 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0701 21:20:01.887515 1604837 ssh_runner.go:195] Run: sudo systemctl restart docker
I0701 21:20:02.946878 1604837 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.059340198s)
I0701 21:20:02.946952 1604837 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I0701 21:20:02.960954 1604837 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0701 21:20:02.976552 1604837 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0701 21:20:03.077589 1604837 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0701 21:20:03.166539 1604837 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0701 21:20:03.249896 1604837 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0701 21:20:03.278646 1604837 ssh_runner.go:195] Run: sudo systemctl reset-failed cri-docker.service
I0701 21:20:03.291345 1604837 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0701 21:20:03.379674 1604837 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I0701 21:20:03.455633 1604837 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0701 21:20:03.469521 1604837 start.go:542] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0701 21:20:03.469598 1604837 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0701 21:20:03.474114 1604837 start.go:563] Will wait 60s for crictl version
I0701 21:20:03.474180 1604837 ssh_runner.go:195] Run: which crictl
I0701 21:20:03.478565 1604837 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0701 21:20:03.517307 1604837 start.go:579] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  28.1.1
RuntimeApiVersion:  v1
I0701 21:20:03.517370 1604837 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0701 21:20:03.553160 1604837 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0701 21:20:03.580648 1604837 out.go:235] 🐳  Preparing Kubernetes v1.33.1 on Docker 28.1.1 ...
I0701 21:20:03.580771 1604837 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0701 21:20:03.598688 1604837 ssh_runner.go:195] Run: grep 192.168.49.1	host.minikube.internal$ /etc/hosts
I0701 21:20:03.604000 1604837 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.49.1	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0701 21:20:03.617019 1604837 kubeadm.go:875] updating cluster {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b Memory:3900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.33.1 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/naresh:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I0701 21:20:03.617082 1604837 preload.go:131] Checking if preload exists for k8s version v1.33.1 and runtime docker
I0701 21:20:03.617131 1604837 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0701 21:20:03.637138 1604837 docker.go:702] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.33.1
registry.k8s.io/kube-controller-manager:v1.33.1
registry.k8s.io/kube-scheduler:v1.33.1
registry.k8s.io/kube-proxy:v1.33.1
registry.k8s.io/etcd:3.5.21-0
registry.k8s.io/coredns/coredns:v1.12.0
registry.k8s.io/pause:3.10
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0701 21:20:03.637146 1604837 docker.go:632] Images already preloaded, skipping extraction
I0701 21:20:03.637203 1604837 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0701 21:20:03.656193 1604837 docker.go:702] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.33.1
registry.k8s.io/kube-controller-manager:v1.33.1
registry.k8s.io/kube-scheduler:v1.33.1
registry.k8s.io/kube-proxy:v1.33.1
registry.k8s.io/etcd:3.5.21-0
registry.k8s.io/coredns/coredns:v1.12.0
registry.k8s.io/pause:3.10
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0701 21:20:03.656211 1604837 cache_images.go:84] Images are preloaded, skipping loading
I0701 21:20:03.656227 1604837 kubeadm.go:926] updating node { 192.168.49.2 8443 v1.33.1 docker true true} ...
I0701 21:20:03.656300 1604837 kubeadm.go:938] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.33.1/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.33.1 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I0701 21:20:03.656359 1604837 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0701 21:20:04.075852 1604837 cni.go:84] Creating CNI manager for ""
I0701 21:20:04.075871 1604837 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0701 21:20:04.075882 1604837 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I0701 21:20:04.075906 1604837 kubeadm.go:189] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.33.1 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:systemd ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0701 21:20:04.076019 1604837 kubeadm.go:195] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    - name: "node-ip"
      value: "192.168.49.2"
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    - name: "enable-admission-plugins"
      value: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    - name: "allocate-node-cidrs"
      value: "true"
    - name: "leader-elect"
      value: "false"
scheduler:
  extraArgs:
    - name: "leader-elect"
      value: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      - name: "proxy-refresh-interval"
        value: "70000"
kubernetesVersion: v1.33.1
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: systemd
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%"
  nodefs.inodesFree: "0%"
  imagefs.available: "0%"
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0701 21:20:04.076084 1604837 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.33.1
I0701 21:20:04.088144 1604837 binaries.go:44] Found k8s binaries, skipping transfer
I0701 21:20:04.088234 1604837 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0701 21:20:04.098133 1604837 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (307 bytes)
I0701 21:20:04.122336 1604837 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0701 21:20:04.145430 1604837 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2285 bytes)
I0701 21:20:04.168581 1604837 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0701 21:20:04.174139 1604837 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0701 21:20:04.189449 1604837 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0701 21:20:04.288017 1604837 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0701 21:20:04.310046 1604837 certs.go:68] Setting up /home/naresh/.minikube/profiles/minikube for IP: 192.168.49.2
I0701 21:20:04.310053 1604837 certs.go:194] generating shared ca certs ...
I0701 21:20:04.310065 1604837 certs.go:226] acquiring lock for ca certs: {Name:mkb4b7409da0d29caa78f73ecb525f6c8e501779 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0701 21:20:04.310128 1604837 certs.go:240] generating "minikubeCA" ca cert: /home/naresh/.minikube/ca.key
I0701 21:20:04.564824 1604837 crypto.go:156] Writing cert to /home/naresh/.minikube/ca.crt ...
I0701 21:20:04.564834 1604837 lock.go:35] WriteFile acquiring /home/naresh/.minikube/ca.crt: {Name:mk18f3272169d7ac36594b7cc87868a29c33f00f Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0701 21:20:04.564953 1604837 crypto.go:164] Writing key to /home/naresh/.minikube/ca.key ...
I0701 21:20:04.564958 1604837 lock.go:35] WriteFile acquiring /home/naresh/.minikube/ca.key: {Name:mkc417af79874ea9a3d4aaa4fa2a7f0dffdb4779 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0701 21:20:04.565022 1604837 certs.go:240] generating "proxyClientCA" ca cert: /home/naresh/.minikube/proxy-client-ca.key
I0701 21:20:04.838732 1604837 crypto.go:156] Writing cert to /home/naresh/.minikube/proxy-client-ca.crt ...
I0701 21:20:04.838743 1604837 lock.go:35] WriteFile acquiring /home/naresh/.minikube/proxy-client-ca.crt: {Name:mk9a644fdaf9294fba5f01f7350b441155a7c0ea Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0701 21:20:04.838851 1604837 crypto.go:164] Writing key to /home/naresh/.minikube/proxy-client-ca.key ...
I0701 21:20:04.838856 1604837 lock.go:35] WriteFile acquiring /home/naresh/.minikube/proxy-client-ca.key: {Name:mk9dc31a13af730ce6d073c534fbf48cb793bcdc Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0701 21:20:04.838910 1604837 certs.go:256] generating profile certs ...
I0701 21:20:04.838950 1604837 certs.go:363] generating signed profile cert for "minikube-user": /home/naresh/.minikube/profiles/minikube/client.key
I0701 21:20:04.838960 1604837 crypto.go:68] Generating cert /home/naresh/.minikube/profiles/minikube/client.crt with IP's: []
I0701 21:20:04.881542 1604837 crypto.go:156] Writing cert to /home/naresh/.minikube/profiles/minikube/client.crt ...
I0701 21:20:04.881563 1604837 lock.go:35] WriteFile acquiring /home/naresh/.minikube/profiles/minikube/client.crt: {Name:mk1cf65eff9cc678f11e7cc3635b69d68432c344 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0701 21:20:04.881672 1604837 crypto.go:164] Writing key to /home/naresh/.minikube/profiles/minikube/client.key ...
I0701 21:20:04.881677 1604837 lock.go:35] WriteFile acquiring /home/naresh/.minikube/profiles/minikube/client.key: {Name:mkef4bba24efeba28d32d939992a5ddb40a4fd3d Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0701 21:20:04.881733 1604837 certs.go:363] generating signed profile cert for "minikube": /home/naresh/.minikube/profiles/minikube/apiserver.key.7fb57e3c
I0701 21:20:04.881750 1604837 crypto.go:68] Generating cert /home/naresh/.minikube/profiles/minikube/apiserver.crt.7fb57e3c with IP's: [10.96.0.1 127.0.0.1 10.0.0.1 192.168.49.2]
I0701 21:20:05.032450 1604837 crypto.go:156] Writing cert to /home/naresh/.minikube/profiles/minikube/apiserver.crt.7fb57e3c ...
I0701 21:20:05.032466 1604837 lock.go:35] WriteFile acquiring /home/naresh/.minikube/profiles/minikube/apiserver.crt.7fb57e3c: {Name:mk87b5ab0223fda9ca268a205d02ad6c4d1250a9 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0701 21:20:05.032615 1604837 crypto.go:164] Writing key to /home/naresh/.minikube/profiles/minikube/apiserver.key.7fb57e3c ...
I0701 21:20:05.032626 1604837 lock.go:35] WriteFile acquiring /home/naresh/.minikube/profiles/minikube/apiserver.key.7fb57e3c: {Name:mkc3f552bdd7815778b07a6af7a98621c41e7600 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0701 21:20:05.032689 1604837 certs.go:381] copying /home/naresh/.minikube/profiles/minikube/apiserver.crt.7fb57e3c -> /home/naresh/.minikube/profiles/minikube/apiserver.crt
I0701 21:20:05.032776 1604837 certs.go:385] copying /home/naresh/.minikube/profiles/minikube/apiserver.key.7fb57e3c -> /home/naresh/.minikube/profiles/minikube/apiserver.key
I0701 21:20:05.032864 1604837 certs.go:363] generating signed profile cert for "aggregator": /home/naresh/.minikube/profiles/minikube/proxy-client.key
I0701 21:20:05.032885 1604837 crypto.go:68] Generating cert /home/naresh/.minikube/profiles/minikube/proxy-client.crt with IP's: []
I0701 21:20:05.484341 1604837 crypto.go:156] Writing cert to /home/naresh/.minikube/profiles/minikube/proxy-client.crt ...
I0701 21:20:05.484356 1604837 lock.go:35] WriteFile acquiring /home/naresh/.minikube/profiles/minikube/proxy-client.crt: {Name:mk66f8d435290ae02020bc9a34b776842f825a89 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0701 21:20:05.484474 1604837 crypto.go:164] Writing key to /home/naresh/.minikube/profiles/minikube/proxy-client.key ...
I0701 21:20:05.484479 1604837 lock.go:35] WriteFile acquiring /home/naresh/.minikube/profiles/minikube/proxy-client.key: {Name:mke509f6cce8cd34ebead5ac24f47d2ce74eb6f7 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0701 21:20:05.484652 1604837 certs.go:484] found cert: /home/naresh/.minikube/certs/ca-key.pem (1679 bytes)
I0701 21:20:05.484680 1604837 certs.go:484] found cert: /home/naresh/.minikube/certs/ca.pem (1078 bytes)
I0701 21:20:05.484708 1604837 certs.go:484] found cert: /home/naresh/.minikube/certs/cert.pem (1123 bytes)
I0701 21:20:05.484730 1604837 certs.go:484] found cert: /home/naresh/.minikube/certs/key.pem (1671 bytes)
I0701 21:20:05.485256 1604837 ssh_runner.go:362] scp /home/naresh/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0701 21:20:05.512700 1604837 ssh_runner.go:362] scp /home/naresh/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I0701 21:20:05.539684 1604837 ssh_runner.go:362] scp /home/naresh/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0701 21:20:05.566663 1604837 ssh_runner.go:362] scp /home/naresh/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1679 bytes)
I0701 21:20:05.595022 1604837 ssh_runner.go:362] scp /home/naresh/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1411 bytes)
I0701 21:20:05.621857 1604837 ssh_runner.go:362] scp /home/naresh/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0701 21:20:05.648832 1604837 ssh_runner.go:362] scp /home/naresh/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0701 21:20:05.677712 1604837 ssh_runner.go:362] scp /home/naresh/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0701 21:20:05.732897 1604837 ssh_runner.go:362] scp /home/naresh/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0701 21:20:05.763480 1604837 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0701 21:20:05.786097 1604837 ssh_runner.go:195] Run: openssl version
I0701 21:20:05.792844 1604837 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0701 21:20:05.807201 1604837 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0701 21:20:05.810939 1604837 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Jul  1 15:50 /usr/share/ca-certificates/minikubeCA.pem
I0701 21:20:05.811009 1604837 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0701 21:20:05.818171 1604837 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0701 21:20:05.828818 1604837 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I0701 21:20:05.832569 1604837 certs.go:399] 'apiserver-kubelet-client' cert doesn't exist, likely first start: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt: Process exited with status 1
stdout:

stderr:
stat: cannot statx '/var/lib/minikube/certs/apiserver-kubelet-client.crt': No such file or directory
I0701 21:20:05.832599 1604837 kubeadm.go:392] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b Memory:3900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.33.1 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/naresh:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0701 21:20:05.832679 1604837 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0701 21:20:05.850582 1604837 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0701 21:20:05.860663 1604837 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0701 21:20:05.870543 1604837 kubeadm.go:214] ignoring SystemVerification for kubeadm because of docker driver
I0701 21:20:05.870590 1604837 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0701 21:20:05.881204 1604837 kubeadm.go:155] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0701 21:20:05.881231 1604837 kubeadm.go:157] found existing configuration files:

I0701 21:20:05.881291 1604837 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I0701 21:20:05.891396 1604837 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I0701 21:20:05.891462 1604837 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I0701 21:20:05.901183 1604837 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I0701 21:20:05.911177 1604837 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I0701 21:20:05.911233 1604837 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I0701 21:20:05.921085 1604837 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I0701 21:20:05.931091 1604837 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I0701 21:20:05.931157 1604837 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I0701 21:20:05.940855 1604837 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I0701 21:20:05.950768 1604837 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I0701 21:20:05.950823 1604837 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I0701 21:20:05.960588 1604837 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.33.1:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0701 21:20:06.164105 1604837 kubeadm.go:310] [init] Using Kubernetes version: v1.33.1
I0701 21:20:06.164165 1604837 kubeadm.go:310] [preflight] Running pre-flight checks
I0701 21:20:06.192822 1604837 kubeadm.go:310] [preflight] The system verification failed. Printing the output from the verification:
I0701 21:20:06.192951 1604837 kubeadm.go:310] [0;37mKERNEL_VERSION[0m: [0;32m6.11.0-26-generic[0m
I0701 21:20:06.193010 1604837 kubeadm.go:310] [0;37mOS[0m: [0;32mLinux[0m
I0701 21:20:06.193072 1604837 kubeadm.go:310] [0;37mCGROUPS_CPU[0m: [0;32menabled[0m
I0701 21:20:06.193135 1604837 kubeadm.go:310] [0;37mCGROUPS_CPUSET[0m: [0;32menabled[0m
I0701 21:20:06.193212 1604837 kubeadm.go:310] [0;37mCGROUPS_DEVICES[0m: [0;32menabled[0m
I0701 21:20:06.193300 1604837 kubeadm.go:310] [0;37mCGROUPS_FREEZER[0m: [0;32menabled[0m
I0701 21:20:06.193355 1604837 kubeadm.go:310] [0;37mCGROUPS_MEMORY[0m: [0;32menabled[0m
I0701 21:20:06.193423 1604837 kubeadm.go:310] [0;37mCGROUPS_PIDS[0m: [0;32menabled[0m
I0701 21:20:06.193490 1604837 kubeadm.go:310] [0;37mCGROUPS_HUGETLB[0m: [0;32menabled[0m
I0701 21:20:06.193555 1604837 kubeadm.go:310] [0;37mCGROUPS_IO[0m: [0;32menabled[0m
I0701 21:20:06.246965 1604837 kubeadm.go:310] [preflight] Pulling images required for setting up a Kubernetes cluster
I0701 21:20:06.247121 1604837 kubeadm.go:310] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0701 21:20:06.247285 1604837 kubeadm.go:310] [preflight] You can also perform this action beforehand using 'kubeadm config images pull'
I0701 21:20:06.260858 1604837 kubeadm.go:310] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0701 21:20:06.262504 1604837 out.go:235]     ▪ Generating certificates and keys ...
I0701 21:20:06.262640 1604837 kubeadm.go:310] [certs] Using existing ca certificate authority
I0701 21:20:06.262756 1604837 kubeadm.go:310] [certs] Using existing apiserver certificate and key on disk
I0701 21:20:07.017498 1604837 kubeadm.go:310] [certs] Generating "apiserver-kubelet-client" certificate and key
I0701 21:20:07.361386 1604837 kubeadm.go:310] [certs] Generating "front-proxy-ca" certificate and key
I0701 21:20:07.481186 1604837 kubeadm.go:310] [certs] Generating "front-proxy-client" certificate and key
I0701 21:20:07.681879 1604837 kubeadm.go:310] [certs] Generating "etcd/ca" certificate and key
I0701 21:20:07.966183 1604837 kubeadm.go:310] [certs] Generating "etcd/server" certificate and key
I0701 21:20:07.966466 1604837 kubeadm.go:310] [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0701 21:20:08.181817 1604837 kubeadm.go:310] [certs] Generating "etcd/peer" certificate and key
I0701 21:20:08.181973 1604837 kubeadm.go:310] [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0701 21:20:08.302472 1604837 kubeadm.go:310] [certs] Generating "etcd/healthcheck-client" certificate and key
I0701 21:20:08.418460 1604837 kubeadm.go:310] [certs] Generating "apiserver-etcd-client" certificate and key
I0701 21:20:09.076868 1604837 kubeadm.go:310] [certs] Generating "sa" key and public key
I0701 21:20:09.076982 1604837 kubeadm.go:310] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0701 21:20:09.506717 1604837 kubeadm.go:310] [kubeconfig] Writing "admin.conf" kubeconfig file
I0701 21:20:09.827515 1604837 kubeadm.go:310] [kubeconfig] Writing "super-admin.conf" kubeconfig file
I0701 21:20:10.094211 1604837 kubeadm.go:310] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0701 21:20:10.186402 1604837 kubeadm.go:310] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0701 21:20:10.421593 1604837 kubeadm.go:310] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0701 21:20:10.422202 1604837 kubeadm.go:310] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0701 21:20:10.426389 1604837 kubeadm.go:310] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0701 21:20:10.427844 1604837 out.go:235]     ▪ Booting up control plane ...
I0701 21:20:10.428036 1604837 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0701 21:20:10.428130 1604837 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0701 21:20:10.431982 1604837 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0701 21:20:10.466337 1604837 kubeadm.go:310] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0701 21:20:10.475181 1604837 kubeadm.go:310] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0701 21:20:10.475289 1604837 kubeadm.go:310] [kubelet-start] Starting the kubelet
I0701 21:20:10.605386 1604837 kubeadm.go:310] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
I0701 21:20:10.605484 1604837 kubeadm.go:310] [kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
I0701 21:20:11.607011 1604837 kubeadm.go:310] [kubelet-check] The kubelet is healthy after 1.001707117s
I0701 21:20:11.610500 1604837 kubeadm.go:310] [control-plane-check] Waiting for healthy control plane components. This can take up to 4m0s
I0701 21:20:11.610608 1604837 kubeadm.go:310] [control-plane-check] Checking kube-apiserver at https://192.168.49.2:8443/livez
I0701 21:20:11.610687 1604837 kubeadm.go:310] [control-plane-check] Checking kube-controller-manager at https://127.0.0.1:10257/healthz
I0701 21:20:11.610803 1604837 kubeadm.go:310] [control-plane-check] Checking kube-scheduler at https://127.0.0.1:10259/livez
I0701 21:20:14.092427 1604837 kubeadm.go:310] [control-plane-check] kube-controller-manager is healthy after 2.48112593s
I0701 21:20:15.232406 1604837 kubeadm.go:310] [control-plane-check] kube-scheduler is healthy after 3.621926764s
I0701 21:20:17.111500 1604837 kubeadm.go:310] [control-plane-check] kube-apiserver is healthy after 5.50097679s
I0701 21:20:17.123344 1604837 kubeadm.go:310] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0701 21:20:17.138368 1604837 kubeadm.go:310] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0701 21:20:17.157562 1604837 kubeadm.go:310] [upload-certs] Skipping phase. Please see --upload-certs
I0701 21:20:17.157833 1604837 kubeadm.go:310] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0701 21:20:17.166057 1604837 kubeadm.go:310] [bootstrap-token] Using token: wbrl3b.j51c01oj9aqj5xe4
I0701 21:20:17.167371 1604837 out.go:235]     ▪ Configuring RBAC rules ...
I0701 21:20:17.167616 1604837 kubeadm.go:310] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0701 21:20:17.173049 1604837 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0701 21:20:17.178590 1604837 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0701 21:20:17.182383 1604837 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0701 21:20:17.185785 1604837 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0701 21:20:17.189663 1604837 kubeadm.go:310] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0701 21:20:17.518621 1604837 kubeadm.go:310] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0701 21:20:17.939341 1604837 kubeadm.go:310] [addons] Applied essential addon: CoreDNS
I0701 21:20:18.517763 1604837 kubeadm.go:310] [addons] Applied essential addon: kube-proxy
I0701 21:20:18.519351 1604837 kubeadm.go:310] 
I0701 21:20:18.519462 1604837 kubeadm.go:310] Your Kubernetes control-plane has initialized successfully!
I0701 21:20:18.519470 1604837 kubeadm.go:310] 
I0701 21:20:18.519614 1604837 kubeadm.go:310] To start using your cluster, you need to run the following as a regular user:
I0701 21:20:18.519620 1604837 kubeadm.go:310] 
I0701 21:20:18.519665 1604837 kubeadm.go:310]   mkdir -p $HOME/.kube
I0701 21:20:18.519769 1604837 kubeadm.go:310]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0701 21:20:18.519859 1604837 kubeadm.go:310]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0701 21:20:18.519865 1604837 kubeadm.go:310] 
I0701 21:20:18.519958 1604837 kubeadm.go:310] Alternatively, if you are the root user, you can run:
I0701 21:20:18.519963 1604837 kubeadm.go:310] 
I0701 21:20:18.520045 1604837 kubeadm.go:310]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0701 21:20:18.520051 1604837 kubeadm.go:310] 
I0701 21:20:18.520147 1604837 kubeadm.go:310] You should now deploy a pod network to the cluster.
I0701 21:20:18.520304 1604837 kubeadm.go:310] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0701 21:20:18.520428 1604837 kubeadm.go:310]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0701 21:20:18.520434 1604837 kubeadm.go:310] 
I0701 21:20:18.520590 1604837 kubeadm.go:310] You can now join any number of control-plane nodes by copying certificate authorities
I0701 21:20:18.520733 1604837 kubeadm.go:310] and service account keys on each node and then running the following as root:
I0701 21:20:18.520755 1604837 kubeadm.go:310] 
I0701 21:20:18.520888 1604837 kubeadm.go:310]   kubeadm join control-plane.minikube.internal:8443 --token wbrl3b.j51c01oj9aqj5xe4 \
I0701 21:20:18.521021 1604837 kubeadm.go:310] 	--discovery-token-ca-cert-hash sha256:04f310125cc1133a199be8281c396ee7502e91bbb3cfafbd5882262839107787 \
I0701 21:20:18.521044 1604837 kubeadm.go:310] 	--control-plane 
I0701 21:20:18.521048 1604837 kubeadm.go:310] 
I0701 21:20:18.521190 1604837 kubeadm.go:310] Then you can join any number of worker nodes by running the following on each as root:
I0701 21:20:18.521206 1604837 kubeadm.go:310] 
I0701 21:20:18.521352 1604837 kubeadm.go:310] kubeadm join control-plane.minikube.internal:8443 --token wbrl3b.j51c01oj9aqj5xe4 \
I0701 21:20:18.521517 1604837 kubeadm.go:310] 	--discovery-token-ca-cert-hash sha256:04f310125cc1133a199be8281c396ee7502e91bbb3cfafbd5882262839107787 
I0701 21:20:18.524303 1604837 kubeadm.go:310] 	[WARNING Swap]: swap is supported for cgroup v2 only. The kubelet must be properly configured to use swap. Please refer to https://kubernetes.io/docs/concepts/architecture/nodes/#swap-memory, or disable swap on the node
I0701 21:20:18.524603 1604837 kubeadm.go:310] 	[WARNING SystemVerification]: failed to parse kernel config: unable to load kernel module: "configs", output: "modprobe: FATAL: Module configs not found in directory /lib/modules/6.11.0-26-generic\n", err: exit status 1
I0701 21:20:18.524764 1604837 kubeadm.go:310] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0701 21:20:18.524779 1604837 cni.go:84] Creating CNI manager for ""
I0701 21:20:18.524792 1604837 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0701 21:20:18.526107 1604837 out.go:177] 🔗  Configuring bridge CNI (Container Networking Interface) ...
I0701 21:20:18.527528 1604837 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0701 21:20:18.539278 1604837 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (496 bytes)
I0701 21:20:18.561583 1604837 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0701 21:20:18.561685 1604837 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.33.1/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0701 21:20:18.561683 1604837 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.33.1/kubectl --kubeconfig=/var/lib/minikube/kubeconfig label --overwrite nodes minikube minikube.k8s.io/updated_at=2025_07_01T21_20_18_0700 minikube.k8s.io/version=v1.36.0 minikube.k8s.io/commit=f8f52f5de11fc6ad8244afac475e1d0f96841df1-dirty minikube.k8s.io/name=minikube minikube.k8s.io/primary=true
I0701 21:20:18.573931 1604837 ops.go:34] apiserver oom_adj: -16
I0701 21:20:18.820760 1604837 kubeadm.go:1105] duration metric: took 259.135499ms to wait for elevateKubeSystemPrivileges
I0701 21:20:18.829525 1604837 kubeadm.go:394] duration metric: took 12.996922418s to StartCluster
I0701 21:20:18.829549 1604837 settings.go:142] acquiring lock: {Name:mk52fea8b14255955c8d7c94c858b6849f9e5138 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0701 21:20:18.829603 1604837 settings.go:150] Updating kubeconfig:  /home/naresh/.kube/config
I0701 21:20:18.830366 1604837 lock.go:35] WriteFile acquiring /home/naresh/.kube/config: {Name:mkbd42c5664eab7bc9f8b06a8cdb99f92a1d8a9a Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0701 21:20:18.830550 1604837 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.33.1/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0701 21:20:18.830565 1604837 start.go:235] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}
I0701 21:20:18.830614 1604837 addons.go:511] enable addons start: toEnable=map[ambassador:false amd-gpu-device-plugin:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volcano:false volumesnapshots:false yakd:false]
I0701 21:20:18.830686 1604837 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0701 21:20:18.830702 1604837 addons.go:238] Setting addon storage-provisioner=true in "minikube"
I0701 21:20:18.830738 1604837 host.go:66] Checking if "minikube" exists ...
I0701 21:20:18.830772 1604837 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.33.1
I0701 21:20:18.830788 1604837 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0701 21:20:18.830823 1604837 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0701 21:20:18.831327 1604837 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0701 21:20:18.831589 1604837 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0701 21:20:18.831941 1604837 out.go:177] 🔎  Verifying Kubernetes components...
I0701 21:20:18.833620 1604837 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0701 21:20:18.877805 1604837 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0701 21:20:18.879193 1604837 addons.go:435] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0701 21:20:18.879240 1604837 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0701 21:20:18.879313 1604837 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0701 21:20:18.885933 1604837 addons.go:238] Setting addon default-storageclass=true in "minikube"
I0701 21:20:18.885966 1604837 host.go:66] Checking if "minikube" exists ...
I0701 21:20:18.886703 1604837 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0701 21:20:18.937798 1604837 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32778 SSHKeyPath:/home/naresh/.minikube/machines/minikube/id_rsa Username:docker}
I0701 21:20:18.960507 1604837 addons.go:435] installing /etc/kubernetes/addons/storageclass.yaml
I0701 21:20:18.961279 1604837 ssh_runner.go:362] scp storageclass/storageclass.yaml --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0701 21:20:18.961371 1604837 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0701 21:20:19.022503 1604837 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32778 SSHKeyPath:/home/naresh/.minikube/machines/minikube/id_rsa Username:docker}
I0701 21:20:19.083408 1604837 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.33.1/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.49.1 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.33.1/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0701 21:20:19.114194 1604837 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.33.1/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0701 21:20:19.145767 1604837 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0701 21:20:19.187036 1604837 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.33.1/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0701 21:20:19.369738 1604837 start.go:971] {"host.minikube.internal": 192.168.49.1} host record injected into CoreDNS's ConfigMap
I0701 21:20:19.510163 1604837 api_server.go:52] waiting for apiserver process to appear ...
I0701 21:20:19.510264 1604837 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0701 21:20:19.516317 1604837 out.go:177] 🌟  Enabled addons: storage-provisioner, default-storageclass
I0701 21:20:19.518593 1604837 addons.go:514] duration metric: took 687.967178ms for enable addons: enabled=[storage-provisioner default-storageclass]
I0701 21:20:19.526439 1604837 api_server.go:72] duration metric: took 695.847846ms to wait for apiserver process to appear ...
I0701 21:20:19.526452 1604837 api_server.go:88] waiting for apiserver healthz status ...
I0701 21:20:19.526469 1604837 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0701 21:20:19.530891 1604837 api_server.go:279] https://192.168.49.2:8443/healthz returned 200:
ok
I0701 21:20:19.531659 1604837 api_server.go:141] control plane version: v1.33.1
I0701 21:20:19.531671 1604837 api_server.go:131] duration metric: took 5.214008ms to wait for apiserver health ...
I0701 21:20:19.531676 1604837 system_pods.go:43] waiting for kube-system pods to appear ...
I0701 21:20:19.533983 1604837 system_pods.go:59] 5 kube-system pods found
I0701 21:20:19.534000 1604837 system_pods.go:61] "etcd-minikube" [9a6e73e2-015c-4a00-8160-efb9790812a5] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0701 21:20:19.534007 1604837 system_pods.go:61] "kube-apiserver-minikube" [37dbce78-ccda-43ff-897a-80358582d2c8] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0701 21:20:19.534013 1604837 system_pods.go:61] "kube-controller-manager-minikube" [b7c05dfa-57c9-40d0-a106-d891d9459c40] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0701 21:20:19.534018 1604837 system_pods.go:61] "kube-scheduler-minikube" [8bdc0523-bb30-46b1-8b82-4c7e5b6c644e] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I0701 21:20:19.534022 1604837 system_pods.go:61] "storage-provisioner" [4b469400-f465-407b-847c-9f6c15f92f46] Pending: PodScheduled:Unschedulable (0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.)
I0701 21:20:19.534027 1604837 system_pods.go:74] duration metric: took 2.346313ms to wait for pod list to return data ...
I0701 21:20:19.534036 1604837 kubeadm.go:578] duration metric: took 703.449134ms to wait for: map[apiserver:true system_pods:true]
I0701 21:20:19.534045 1604837 node_conditions.go:102] verifying NodePressure condition ...
I0701 21:20:19.536044 1604837 node_conditions.go:122] node storage ephemeral capacity is 490048472Ki
I0701 21:20:19.536061 1604837 node_conditions.go:123] node cpu capacity is 4
I0701 21:20:19.536069 1604837 node_conditions.go:105] duration metric: took 2.020089ms to run NodePressure ...
I0701 21:20:19.536079 1604837 start.go:241] waiting for startup goroutines ...
I0701 21:20:19.872922 1604837 kapi.go:214] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I0701 21:20:19.872942 1604837 start.go:246] waiting for cluster config update ...
I0701 21:20:19.872957 1604837 start.go:255] writing updated cluster config ...
I0701 21:20:19.873247 1604837 ssh_runner.go:195] Run: rm -f paused
I0701 21:20:21.079143 1604837 start.go:607] kubectl: 1.33.2, cluster: 1.33.1 (minor skew: 0)
I0701 21:20:21.080563 1604837 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default


==> Docker <==
Jul 01 15:50:01 minikube dockerd[1006]: time="2025-07-01T15:50:01.549659260Z" level=info msg="[graphdriver] using prior storage driver: overlay2"
Jul 01 15:50:01 minikube dockerd[1006]: time="2025-07-01T15:50:01.554660977Z" level=info msg="Loading containers: start."
Jul 01 15:50:01 minikube dockerd[1006]: time="2025-07-01T15:50:01.900328959Z" level=info msg="Processing signal 'terminated'"
Jul 01 15:50:02 minikube dockerd[1006]: time="2025-07-01T15:50:02.109000504Z" level=warning msg="Error (Unable to complete atomic operation, key modified) deleting object [endpoint_count 41b6f91e84652e1ac66907baae92c5ea32eed9f3d401972b22fe24d6fcc579d1], retrying...."
Jul 01 15:50:02 minikube dockerd[1006]: time="2025-07-01T15:50:02.155315910Z" level=info msg="Loading containers: done."
Jul 01 15:50:02 minikube dockerd[1006]: time="2025-07-01T15:50:02.167648751Z" level=info msg="Docker daemon" commit=01f442b containerd-snapshotter=false storage-driver=overlay2 version=28.1.1
Jul 01 15:50:02 minikube dockerd[1006]: time="2025-07-01T15:50:02.167726242Z" level=info msg="Initializing buildkit"
Jul 01 15:50:02 minikube dockerd[1006]: time="2025-07-01T15:50:02.191145328Z" level=info msg="Completed buildkit initialization"
Jul 01 15:50:02 minikube dockerd[1006]: time="2025-07-01T15:50:02.196740344Z" level=info msg="Daemon has completed initialization"
Jul 01 15:50:02 minikube dockerd[1006]: time="2025-07-01T15:50:02.196815305Z" level=info msg="API listen on /var/run/docker.sock"
Jul 01 15:50:02 minikube dockerd[1006]: time="2025-07-01T15:50:02.196828178Z" level=info msg="API listen on [::]:2376"
Jul 01 15:50:02 minikube dockerd[1006]: time="2025-07-01T15:50:02.197859473Z" level=info msg="stopping event stream following graceful shutdown" error="<nil>" module=libcontainerd namespace=moby
Jul 01 15:50:02 minikube dockerd[1006]: time="2025-07-01T15:50:02.198264653Z" level=info msg="Daemon shutdown complete"
Jul 01 15:50:02 minikube systemd[1]: docker.service: Deactivated successfully.
Jul 01 15:50:02 minikube systemd[1]: Stopped Docker Application Container Engine.
Jul 01 15:50:02 minikube systemd[1]: Starting Docker Application Container Engine...
Jul 01 15:50:02 minikube dockerd[1304]: time="2025-07-01T15:50:02.243350702Z" level=info msg="Starting up"
Jul 01 15:50:02 minikube dockerd[1304]: time="2025-07-01T15:50:02.244172256Z" level=info msg="OTEL tracing is not configured, using no-op tracer provider"
Jul 01 15:50:02 minikube dockerd[1304]: time="2025-07-01T15:50:02.254699139Z" level=info msg="Creating a containerd client" address=/run/containerd/containerd.sock timeout=1m0s
Jul 01 15:50:02 minikube dockerd[1304]: time="2025-07-01T15:50:02.260526021Z" level=info msg="[graphdriver] trying configured driver: overlay2"
Jul 01 15:50:02 minikube dockerd[1304]: time="2025-07-01T15:50:02.272941048Z" level=info msg="Loading containers: start."
Jul 01 15:50:02 minikube dockerd[1304]: time="2025-07-01T15:50:02.840999596Z" level=warning msg="Error (Unable to complete atomic operation, key modified) deleting object [endpoint_count be7235b5708b66c3ae31dcb2594bb54d98f6cad67fde4d2cd608968058ed1af1], retrying...."
Jul 01 15:50:02 minikube dockerd[1304]: time="2025-07-01T15:50:02.895646272Z" level=info msg="Loading containers: done."
Jul 01 15:50:02 minikube dockerd[1304]: time="2025-07-01T15:50:02.912827814Z" level=info msg="Docker daemon" commit=01f442b containerd-snapshotter=false storage-driver=overlay2 version=28.1.1
Jul 01 15:50:02 minikube dockerd[1304]: time="2025-07-01T15:50:02.912876466Z" level=info msg="Initializing buildkit"
Jul 01 15:50:02 minikube dockerd[1304]: time="2025-07-01T15:50:02.937437590Z" level=info msg="Completed buildkit initialization"
Jul 01 15:50:02 minikube dockerd[1304]: time="2025-07-01T15:50:02.944928471Z" level=info msg="Daemon has completed initialization"
Jul 01 15:50:02 minikube dockerd[1304]: time="2025-07-01T15:50:02.944987027Z" level=info msg="API listen on /var/run/docker.sock"
Jul 01 15:50:02 minikube dockerd[1304]: time="2025-07-01T15:50:02.945016846Z" level=info msg="API listen on [::]:2376"
Jul 01 15:50:02 minikube systemd[1]: Started Docker Application Container Engine.
Jul 01 15:50:03 minikube systemd[1]: Starting CRI Interface for Docker Application Container Engine...
Jul 01 15:50:03 minikube cri-dockerd[1605]: time="2025-07-01T15:50:03Z" level=info msg="Starting cri-dockerd dev (HEAD)"
Jul 01 15:50:03 minikube cri-dockerd[1605]: time="2025-07-01T15:50:03Z" level=info msg="Connecting to docker on the Endpoint unix:///var/run/docker.sock"
Jul 01 15:50:03 minikube cri-dockerd[1605]: time="2025-07-01T15:50:03Z" level=info msg="Start docker client with request timeout 0s"
Jul 01 15:50:03 minikube cri-dockerd[1605]: time="2025-07-01T15:50:03Z" level=info msg="Hairpin mode is set to hairpin-veth"
Jul 01 15:50:03 minikube cri-dockerd[1605]: time="2025-07-01T15:50:03Z" level=info msg="Loaded network plugin cni"
Jul 01 15:50:03 minikube cri-dockerd[1605]: time="2025-07-01T15:50:03Z" level=info msg="Docker cri networking managed by network plugin cni"
Jul 01 15:50:03 minikube cri-dockerd[1605]: time="2025-07-01T15:50:03Z" level=info msg="Setting cgroupDriver systemd"
Jul 01 15:50:03 minikube cri-dockerd[1605]: time="2025-07-01T15:50:03Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:,},}"
Jul 01 15:50:03 minikube cri-dockerd[1605]: time="2025-07-01T15:50:03Z" level=info msg="Starting the GRPC backend for the Docker CRI interface."
Jul 01 15:50:03 minikube cri-dockerd[1605]: time="2025-07-01T15:50:03Z" level=info msg="Start cri-dockerd grpc backend"
Jul 01 15:50:03 minikube systemd[1]: Started CRI Interface for Docker Application Container Engine.
Jul 01 15:50:11 minikube cri-dockerd[1605]: time="2025-07-01T15:50:11Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/067359810bec952a074d22aede5e034df83ed72f73b85c090b92d80eac99ce2b/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Jul 01 15:50:11 minikube cri-dockerd[1605]: time="2025-07-01T15:50:11Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/e389ec749c78d8ec8fad71ca2b1531c91700e2350eb02a5945941de33c19b52a/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Jul 01 15:50:11 minikube cri-dockerd[1605]: time="2025-07-01T15:50:11Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/5f47d184f1e926be0dcdb2d8d728abf39be7e2b266d844fbcf9e6e30774eecbb/resolv.conf as [nameserver 192.168.49.1 options trust-ad ndots:0 edns0]"
Jul 01 15:50:11 minikube cri-dockerd[1605]: time="2025-07-01T15:50:11Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/7335d28478fd1f648791d37c9b651f2707027111ac88c21f175038351735c5f6/resolv.conf as [nameserver 192.168.49.1 options ndots:0 edns0 trust-ad]"
Jul 01 15:50:23 minikube cri-dockerd[1605]: time="2025-07-01T15:50:23Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/e645a6f843e49b55ede745d4ed0c0e751235ae3b974361c9cf214f7656492035/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Jul 01 15:50:23 minikube cri-dockerd[1605]: time="2025-07-01T15:50:23Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/68e8285c903ece88093d148073fbfbad3800a23bcd05f7925dcdb02e38a7b9cf/resolv.conf as [nameserver 192.168.49.1 options ndots:0 edns0 trust-ad]"
Jul 01 15:50:23 minikube cri-dockerd[1605]: time="2025-07-01T15:50:23Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/01b098ad60468c64822e0cbafe2a6a6b22ade47cb358ceb9cf2bb4baba622b7d/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Jul 01 15:50:28 minikube cri-dockerd[1605]: time="2025-07-01T15:50:28Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:10.244.0.0/24,},}"
Jul 01 15:50:53 minikube dockerd[1304]: time="2025-07-01T15:50:53.649590923Z" level=info msg="ignoring event" container=01131fbdf71ade9bdb8793e54b625669825aef5f41a82bdbc471d961d3ee15b3 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Jul 01 15:52:30 minikube cri-dockerd[1605]: time="2025-07-01T15:52:30Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/13cd8f93f93a475983081bbad3997dff01aac538d63e3909be1b1586a1c58e06/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Jul 01 15:52:42 minikube cri-dockerd[1605]: time="2025-07-01T15:52:42Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/ef09c8a66b5a8eaf4ed55b8ea4eb56ab2d7687e73ff34a9437084babae4e1e32/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Jul 01 15:52:45 minikube cri-dockerd[1605]: time="2025-07-01T15:52:45Z" level=info msg="Pulling image postgres:15: 8a730fef06f5: Downloading [====>                                              ]  396.7kB/4.534MB"
Jul 01 15:52:55 minikube cri-dockerd[1605]: time="2025-07-01T15:52:55Z" level=info msg="Pulling image postgres:15: 8a730fef06f5: Downloading [============>                                      ]  1.093MB/4.534MB"
Jul 01 15:53:05 minikube cri-dockerd[1605]: time="2025-07-01T15:53:05Z" level=info msg="Pulling image postgres:15: 4f48d560b497: Downloading [===================================>               ]  5.734MB/8.066MB"
Jul 01 15:53:15 minikube cri-dockerd[1605]: time="2025-07-01T15:53:15Z" level=info msg="Pulling image postgres:15: 3da95a905ed5: Downloading [==========>                                        ]  6.122MB/28.23MB"
Jul 01 15:53:25 minikube cri-dockerd[1605]: time="2025-07-01T15:53:25Z" level=info msg="Pulling image postgres:15: f8575ed0701b: Downloading [===>                                               ]  7.564MB/109.7MB"
Jul 01 15:53:35 minikube cri-dockerd[1605]: time="2025-07-01T15:53:35Z" level=info msg="Pulling image postgres:15: 3da95a905ed5: Downloading [=================>                                 ]  9.931MB/28.23MB"
Jul 01 15:53:45 minikube cri-dockerd[1605]: time="2025-07-01T15:53:45Z" level=info msg="Pulling image postgres:15: f8575ed0701b: Downloading [======>                                            ]  14.59MB/109.7MB"


==> container status <==
CONTAINER           IMAGE               CREATED             STATE               NAME                      ATTEMPT             POD ID              POD
bb32d91259e25       6e38f40d628db       2 minutes ago       Running             storage-provisioner       1                   e645a6f843e49       storage-provisioner
c42fa097ce989       1cf5f116067c6       3 minutes ago       Running             coredns                   0                   01b098ad60468       coredns-674b8bbfcf-zj4cm
c463a5319ea9f       b79c189b052cd       3 minutes ago       Running             kube-proxy                0                   68e8285c903ec       kube-proxy-kh9z2
01131fbdf71ad       6e38f40d628db       3 minutes ago       Exited              storage-provisioner       0                   e645a6f843e49       storage-provisioner
b3b75c8c137ca       398c985c0d950       3 minutes ago       Running             kube-scheduler            0                   7335d28478fd1       kube-scheduler-minikube
3331e7213b2d3       c6ab243b29f82       3 minutes ago       Running             kube-apiserver            0                   5f47d184f1e92       kube-apiserver-minikube
7a583a9815bd6       ef43894fa110c       3 minutes ago       Running             kube-controller-manager   0                   e389ec749c78d       kube-controller-manager-minikube
08349cb041ac0       499038711c081       3 minutes ago       Running             etcd                      0                   067359810bec9       etcd-minikube


==> coredns [c42fa097ce98] <==
maxprocs: Leaving GOMAXPROCS=4: CPU quota undefined
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[WARNING] plugin/kubernetes: starting server with unsynced Kubernetes API
.:53
[INFO] plugin/reload: Running configuration SHA512 = 9e2996f8cb67ac53e0259ab1f8d615d07d1beb0bd07e6a1e39769c3bf486a905bb991cc47f8d2f14d0d3a90a87dfc625a0b4c524fed169d8158c40657c0694b1
CoreDNS-1.12.0
linux/amd64, go1.23.3, 51e11f1
[INFO] 127.0.0.1:43021 - 61453 "HINFO IN 6738861462772741501.1738064474248770734. udp 57 false 512" NXDOMAIN qr,rd,ra 132 0.174939664s
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.31.2/tools/cache/reflector.go:243: failed to list *v1.Service: Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[ERROR] plugin/kubernetes: Unhandled Error
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.31.2/tools/cache/reflector.go:243: failed to list *v1.EndpointSlice: Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[ERROR] plugin/kubernetes: Unhandled Error
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.31.2/tools/cache/reflector.go:243: failed to list *v1.Namespace: Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[ERROR] plugin/kubernetes: Unhandled Error


==> describe nodes <==
Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=f8f52f5de11fc6ad8244afac475e1d0f96841df1-dirty
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2025_07_01T21_20_18_0700
                    minikube.k8s.io/version=v1.36.0
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Tue, 01 Jul 2025 15:50:15 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Tue, 01 Jul 2025 15:53:41 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Tue, 01 Jul 2025 15:50:28 +0000   Tue, 01 Jul 2025 15:50:12 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Tue, 01 Jul 2025 15:50:28 +0000   Tue, 01 Jul 2025 15:50:12 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Tue, 01 Jul 2025 15:50:28 +0000   Tue, 01 Jul 2025 15:50:12 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Tue, 01 Jul 2025 15:50:28 +0000   Tue, 01 Jul 2025 15:50:15 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                4
  ephemeral-storage:  490048472Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             16292340Ki
  pods:               110
Allocatable:
  cpu:                4
  ephemeral-storage:  490048472Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             16292340Ki
  pods:               110
System Info:
  Machine ID:                 de03183419664af593d0a64239b23e20
  System UUID:                78650d38-0b16-4abc-b734-259d5dca704e
  Boot ID:                    c0b63160-2eae-4b1c-9e29-4b993604d9eb
  Kernel Version:             6.11.0-26-generic
  OS Image:                   Ubuntu 22.04.5 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  docker://28.1.1
  Kubelet Version:            v1.33.1
  Kube-Proxy Version:         
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (9 in total)
  Namespace                   Name                                CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                ------------  ----------  ---------------  -------------  ---
  default                     django-app-7c87747dfb-t99hl         0 (0%)        0 (0%)      0 (0%)           0 (0%)         65s
  default                     postgres-676898fc79-24zfv           0 (0%)        0 (0%)      0 (0%)           0 (0%)         77s
  kube-system                 coredns-674b8bbfcf-zj4cm            100m (2%)     0 (0%)      70Mi (0%)        170Mi (1%)     3m24s
  kube-system                 etcd-minikube                       100m (2%)     0 (0%)      100Mi (0%)       0 (0%)         3m30s
  kube-system                 kube-apiserver-minikube             250m (6%)     0 (0%)      0 (0%)           0 (0%)         3m31s
  kube-system                 kube-controller-manager-minikube    200m (5%)     0 (0%)      0 (0%)           0 (0%)         3m30s
  kube-system                 kube-proxy-kh9z2                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         3m25s
  kube-system                 kube-scheduler-minikube             100m (2%)     0 (0%)      0 (0%)           0 (0%)         3m30s
  kube-system                 storage-provisioner                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         3m28s
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (18%)  0 (0%)
  memory             170Mi (1%)  170Mi (1%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-1Gi      0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:
  Type    Reason                   Age    From             Message
  ----    ------                   ----   ----             -------
  Normal  Starting                 3m23s  kube-proxy       
  Normal  Starting                 3m30s  kubelet          Starting kubelet.
  Normal  NodeAllocatableEnforced  3m30s  kubelet          Updated Node Allocatable limit across pods
  Normal  NodeHasSufficientMemory  3m30s  kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    3m30s  kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     3m30s  kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  RegisteredNode           3m25s  node-controller  Node minikube event: Registered Node minikube in Controller


==> dmesg <==
[Jun30 21:36] kauditd_printk_skb: 8 callbacks suppressed
[Jun30 21:37] kauditd_printk_skb: 9 callbacks suppressed
[Jun30 22:09] kauditd_printk_skb: 11 callbacks suppressed
[Jun30 22:10] kauditd_printk_skb: 12 callbacks suppressed
[Jun30 22:11] kauditd_printk_skb: 13 callbacks suppressed
[Jun30 22:55] kauditd_printk_skb: 14 callbacks suppressed
[Jun30 23:54] done.
[Jul 1 00:33] kauditd_printk_skb: 87 callbacks suppressed
[Jul 1 01:25] done.
[Jul 1 02:00] kauditd_printk_skb: 45 callbacks suppressed
[ +19.601309] kauditd_printk_skb: 2 callbacks suppressed
[Jul 1 02:01] kauditd_printk_skb: 15 callbacks suppressed
[Jul 1 02:33] kauditd_printk_skb: 3 callbacks suppressed
[Jul 1 03:25] done.
[Jul 1 03:33] kauditd_printk_skb: 17 callbacks suppressed
[Jul 1 05:13] done.
[Jul 1 05:17] done.
[Jul 1 05:30] done.
[Jul 1 05:41] done.
[Jul 1 05:57] kauditd_printk_skb: 16 callbacks suppressed
[Jul 1 06:01] kauditd_printk_skb: 16 callbacks suppressed
[Jul 1 06:02] kauditd_printk_skb: 16 callbacks suppressed
[Jul 1 07:14] done.
[  +0.244180] kauditd_printk_skb: 16 callbacks suppressed
[Jul 1 07:21] kauditd_printk_skb: 18 callbacks suppressed
[Jul 1 07:35] kauditd_printk_skb: 17 callbacks suppressed
[Jul 1 07:42] kauditd_printk_skb: 19 callbacks suppressed
[  +7.436641] kauditd_printk_skb: 81 callbacks suppressed
[Jul 1 09:38] kauditd_printk_skb: 20 callbacks suppressed
[Jul 1 11:08] kauditd_printk_skb: 21 callbacks suppressed
[Jul 1 11:18] done.
[Jul 1 13:09] kauditd_printk_skb: 22 callbacks suppressed
[Jul 1 15:07] done.
[Jul 1 15:11] iwlwifi 0000:02:00.0: missed beacons exceeds threshold, but receiving data. Stay connected, Expect bugs.
[  +0.000004] iwlwifi 0000:02:00.0: missed_beacons:19, missed_beacons_since_rx:2
[  +0.102324] iwlwifi 0000:02:00.0: missed beacons exceeds threshold, but receiving data. Stay connected, Expect bugs.
[  +0.000005] iwlwifi 0000:02:00.0: missed_beacons:20, missed_beacons_since_rx:1
[  +0.102334] iwlwifi 0000:02:00.0: missed beacons exceeds threshold, but receiving data. Stay connected, Expect bugs.
[  +0.000005] iwlwifi 0000:02:00.0: missed_beacons:21, missed_beacons_since_rx:2
[  +0.102580] iwlwifi 0000:02:00.0: missed beacons exceeds threshold, but receiving data. Stay connected, Expect bugs.
[  +0.000005] iwlwifi 0000:02:00.0: missed_beacons:22, missed_beacons_since_rx:3
[  +0.102211] iwlwifi 0000:02:00.0: missed beacons exceeds threshold, but receiving data. Stay connected, Expect bugs.
[  +0.000006] iwlwifi 0000:02:00.0: missed_beacons:23, missed_beacons_since_rx:1
[  +0.102500] iwlwifi 0000:02:00.0: missed beacons exceeds threshold, but receiving data. Stay connected, Expect bugs.
[  +0.000005] iwlwifi 0000:02:00.0: missed_beacons:24, missed_beacons_since_rx:2
[  +0.102644] iwlwifi 0000:02:00.0: missed beacons exceeds threshold, but receiving data. Stay connected, Expect bugs.
[  +0.000005] iwlwifi 0000:02:00.0: missed_beacons:25, missed_beacons_since_rx:3
[  +0.102139] iwlwifi 0000:02:00.0: missed beacons exceeds threshold, but receiving data. Stay connected, Expect bugs.
[  +0.000005] iwlwifi 0000:02:00.0: missed_beacons:26, missed_beacons_since_rx:1
[  +0.102484] iwlwifi 0000:02:00.0: missed beacons exceeds threshold, but receiving data. Stay connected, Expect bugs.
[  +0.000005] iwlwifi 0000:02:00.0: missed_beacons:27, missed_beacons_since_rx:1
[  +0.102294] iwlwifi 0000:02:00.0: missed beacons exceeds threshold, but receiving data. Stay connected, Expect bugs.
[  +0.000005] iwlwifi 0000:02:00.0: missed_beacons:28, missed_beacons_since_rx:1
[  +0.102527] iwlwifi 0000:02:00.0: missed beacons exceeds threshold, but receiving data. Stay connected, Expect bugs.
[  +0.000005] iwlwifi 0000:02:00.0: missed_beacons:29, missed_beacons_since_rx:1
[  +0.102378] iwlwifi 0000:02:00.0: missed beacons exceeds threshold, but receiving data. Stay connected, Expect bugs.
[  +0.000005] iwlwifi 0000:02:00.0: missed_beacons:30, missed_beacons_since_rx:2
[Jul 1 15:21] iwlwifi 0000:02:00.0: Not associated and the time event is over already...
[Jul 1 15:35] done.
[Jul 1 15:46] done.


==> etcd [08349cb041ac] <==
{"level":"warn","ts":"2025-07-01T15:50:12.636727Z","caller":"embed/config.go:689","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"warn","ts":"2025-07-01T15:50:12.636815Z","caller":"etcdmain/config.go:389","msg":"--proxy-refresh-interval is deprecated in 3.5 and will be decommissioned in 3.6."}
{"level":"info","ts":"2025-07-01T15:50:12.636836Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"]}
{"level":"warn","ts":"2025-07-01T15:50:12.636944Z","caller":"embed/config.go:689","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2025-07-01T15:50:12.636964Z","caller":"embed/etcd.go:140","msg":"configuring peer listeners","listen-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2025-07-01T15:50:12.637025Z","caller":"embed/etcd.go:528","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-07-01T15:50:12.645522Z","caller":"embed/etcd.go:148","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"]}
{"level":"info","ts":"2025-07-01T15:50:12.645712Z","caller":"embed/etcd.go:323","msg":"starting an etcd server","etcd-version":"3.5.21","git-sha":"a17edfd","go-version":"go1.23.7","go-os":"linux","go-arch":"amd64","max-cpu-set":4,"max-cpu-available":4,"member-initialized":false,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"minikube=https://192.168.49.2:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2025-07-01T15:50:12.654384Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"5.961986ms"}
{"level":"info","ts":"2025-07-01T15:50:12.708313Z","caller":"etcdserver/raft.go:506","msg":"starting local member","local-member-id":"aec36adc501070cc","cluster-id":"fa54960ea34d58be"}
{"level":"info","ts":"2025-07-01T15:50:12.710432Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=()"}
{"level":"info","ts":"2025-07-01T15:50:12.715415Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 0"}
{"level":"info","ts":"2025-07-01T15:50:12.715432Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2025-07-01T15:50:12.715443Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 1"}
{"level":"info","ts":"2025-07-01T15:50:12.715491Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"warn","ts":"2025-07-01T15:50:12.727621Z","caller":"auth/store.go:1241","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2025-07-01T15:50:12.766474Z","caller":"mvcc/kvstore.go:425","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2025-07-01T15:50:12.766676Z","caller":"etcdserver/server.go:628","msg":"restore consistentIndex","index":0}
{"level":"info","ts":"2025-07-01T15:50:12.770796Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2025-07-01T15:50:12.788522Z","caller":"etcdserver/server.go:875","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.21","cluster-version":"to_be_decided"}
{"level":"info","ts":"2025-07-01T15:50:12.789132Z","caller":"etcdserver/server.go:759","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"aec36adc501070cc","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2025-07-01T15:50:12.792449Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2025-07-01T15:50:12.792527Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2025-07-01T15:50:12.792540Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2025-07-01T15:50:12.793370Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2025-07-01T15:50:12.792862Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-07-01T15:50:12.797319Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"],"added-peer-is-learner":false}
{"level":"info","ts":"2025-07-01T15:50:12.805442Z","caller":"embed/etcd.go:762","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-07-01T15:50:12.805597Z","caller":"embed/etcd.go:633","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2025-07-01T15:50:12.805818Z","caller":"embed/etcd.go:603","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2025-07-01T15:50:12.809443Z","caller":"embed/etcd.go:292","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2025-07-01T15:50:12.812413Z","caller":"embed/etcd.go:908","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2025-07-01T15:50:13.616517Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 1"}
{"level":"info","ts":"2025-07-01T15:50:13.616611Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 1"}
{"level":"info","ts":"2025-07-01T15:50:13.616655Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 1"}
{"level":"info","ts":"2025-07-01T15:50:13.616721Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 2"}
{"level":"info","ts":"2025-07-01T15:50:13.616797Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2025-07-01T15:50:13.616836Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 2"}
{"level":"info","ts":"2025-07-01T15:50:13.616915Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 2"}
{"level":"info","ts":"2025-07-01T15:50:14.073987Z","caller":"etcdserver/server.go:2144","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2025-07-01T15:50:14.074084Z","caller":"embed/serve.go:124","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-07-01T15:50:14.074487Z","caller":"etcdserver/server.go:2697","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2025-07-01T15:50:14.077104Z","caller":"embed/serve.go:124","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-07-01T15:50:14.077555Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2025-07-01T15:50:14.080350Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2025-07-01T15:50:14.077672Z","caller":"membership/cluster.go:587","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2025-07-01T15:50:14.080726Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2025-07-01T15:50:14.080849Z","caller":"etcdserver/server.go:2721","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2025-07-01T15:50:14.083960Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-07-01T15:50:14.086753Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-07-01T15:50:14.094187Z","caller":"embed/serve.go:275","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}
{"level":"info","ts":"2025-07-01T15:50:14.095406Z","caller":"embed/serve.go:275","msg":"serving client traffic securely","traffic":"grpc+http","address":"192.168.49.2:2379"}


==> kernel <==
 15:53:47 up 25 days,  6:43,  0 users,  load average: 1.18, 1.62, 1.25
Linux minikube 6.11.0-26-generic #26~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Apr 17 19:20:47 UTC 2 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.5 LTS"


==> kube-apiserver [3331e7213b2d] <==
I0701 15:50:15.156193       1 shared_informer.go:350] "Waiting for caches to sync" controller="cluster_authentication_trust_controller"
I0701 15:50:15.147537       1 system_namespaces_controller.go:66] Starting system namespaces controller
I0701 15:50:15.148100       1 remote_available_controller.go:411] Starting RemoteAvailability controller
I0701 15:50:15.159678       1 cache.go:32] Waiting for caches to sync for RemoteAvailability controller
I0701 15:50:15.148114       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0701 15:50:15.148154       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0701 15:50:15.186676       1 controller.go:142] Starting OpenAPI controller
I0701 15:50:15.186719       1 controller.go:90] Starting OpenAPI V3 controller
I0701 15:50:15.186739       1 naming_controller.go:299] Starting NamingConditionController
I0701 15:50:15.186752       1 establishing_controller.go:81] Starting EstablishingController
I0701 15:50:15.186766       1 nonstructuralschema_controller.go:195] Starting NonStructuralSchemaConditionController
I0701 15:50:15.186788       1 apiapproval_controller.go:189] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0701 15:50:15.186801       1 crd_finalizer.go:269] Starting CRDFinalizer
I0701 15:50:15.205265       1 shared_informer.go:357] "Caches are synced" controller="*generic.policySource[*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicy,*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicyBinding,k8s.io/apiserver/pkg/admission/plugin/policy/validating.Validator]"
I0701 15:50:15.205472       1 policy_source.go:240] refreshing policies
I0701 15:50:15.250974       1 apf_controller.go:382] Running API Priority and Fairness config worker
I0701 15:50:15.251078       1 apf_controller.go:385] Running API Priority and Fairness periodic rebalancing process
I0701 15:50:15.251324       1 shared_informer.go:357] "Caches are synced" controller="crd-autoregister"
I0701 15:50:15.251058       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0701 15:50:15.252208       1 aggregator.go:171] initial CRD sync complete...
I0701 15:50:15.252335       1 autoregister_controller.go:144] Starting autoregister controller
I0701 15:50:15.252346       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0701 15:50:15.252354       1 cache.go:39] Caches are synced for autoregister controller
I0701 15:50:15.252524       1 handler_discovery.go:451] Starting ResourceDiscoveryManager
I0701 15:50:15.254968       1 shared_informer.go:357] "Caches are synced" controller="ipallocator-repair-controller"
I0701 15:50:15.255262       1 cache.go:39] Caches are synced for LocalAvailability controller
I0701 15:50:15.255270       1 shared_informer.go:357] "Caches are synced" controller="kubernetes-service-cidr-controller"
I0701 15:50:15.255389       1 default_servicecidr_controller.go:165] Creating default ServiceCIDR with CIDRs: [10.96.0.0/12]
I0701 15:50:15.256393       1 shared_informer.go:357] "Caches are synced" controller="cluster_authentication_trust_controller"
I0701 15:50:15.256406       1 shared_informer.go:357] "Caches are synced" controller="configmaps"
I0701 15:50:15.260549       1 cache.go:39] Caches are synced for RemoteAvailability controller
I0701 15:50:15.262168       1 controller.go:667] quota admission added evaluator for: namespaces
I0701 15:50:15.264308       1 default_servicecidr_controller.go:214] Setting default ServiceCIDR condition Ready to True
I0701 15:50:15.268527       1 cidrallocator.go:301] created ClusterIP allocator for Service CIDR 10.96.0.0/12
I0701 15:50:15.277438       1 default_servicecidr_controller.go:136] Shutting down kubernetes-service-cidr-controller
I0701 15:50:15.283902       1 default_servicecidr_controller.go:214] Setting default ServiceCIDR condition Ready to True
I0701 15:50:15.286467       1 cidrallocator.go:277] updated ClusterIP allocator for Service CIDR 10.96.0.0/12
I0701 15:50:15.291920       1 shared_informer.go:357] "Caches are synced" controller="node_authorizer"
I0701 15:50:15.297381       1 controller.go:667] quota admission added evaluator for: leases.coordination.k8s.io
I0701 15:50:16.157519       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0701 15:50:16.161144       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0701 15:50:16.161164       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0701 15:50:16.697455       1 controller.go:667] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0701 15:50:16.738928       1 controller.go:667] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0701 15:50:16.859565       1 alloc.go:328] "allocated clusterIPs" service="default/kubernetes" clusterIPs={"IPv4":"10.96.0.1"}
W0701 15:50:16.865168       1 lease.go:265] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I0701 15:50:16.866170       1 controller.go:667] quota admission added evaluator for: endpoints
I0701 15:50:16.870804       1 controller.go:667] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0701 15:50:17.199124       1 controller.go:667] quota admission added evaluator for: serviceaccounts
I0701 15:50:17.925816       1 controller.go:667] quota admission added evaluator for: deployments.apps
I0701 15:50:17.938524       1 alloc.go:328] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs={"IPv4":"10.96.0.10"}
I0701 15:50:17.946025       1 controller.go:667] quota admission added evaluator for: daemonsets.apps
I0701 15:50:21.902831       1 cidrallocator.go:277] updated ClusterIP allocator for Service CIDR 10.96.0.0/12
I0701 15:50:21.906263       1 cidrallocator.go:277] updated ClusterIP allocator for Service CIDR 10.96.0.0/12
I0701 15:50:22.900732       1 controller.go:667] quota admission added evaluator for: controllerrevisions.apps
I0701 15:50:22.953122       1 controller.go:667] quota admission added evaluator for: replicasets.apps
I0701 15:52:30.217037       1 alloc.go:328] "allocated clusterIPs" service="default/postgres" clusterIPs={"IPv4":"10.106.228.170"}
I0701 15:52:30.231960       1 cidrallocator.go:277] updated ClusterIP allocator for Service CIDR 10.96.0.0/12
I0701 15:53:04.068242       1 cidrallocator.go:277] updated ClusterIP allocator for Service CIDR 10.96.0.0/12
I0701 15:53:04.069111       1 alloc.go:328] "allocated clusterIPs" service="default/django-service" clusterIPs={"IPv4":"10.103.129.182"}


==> kube-controller-manager [7a583a9815bd] <==
I0701 15:50:21.750775       1 controllermanager.go:778] "Started controller" controller="statefulset-controller"
I0701 15:50:21.750862       1 stateful_set.go:166] "Starting stateful set controller" logger="statefulset-controller"
I0701 15:50:21.750879       1 shared_informer.go:350] "Waiting for caches to sync" controller="stateful set"
I0701 15:50:21.796865       1 controllermanager.go:778] "Started controller" controller="certificatesigningrequest-cleaner-controller"
I0701 15:50:21.796880       1 controllermanager.go:736] "Skipping a cloud provider controller" controller="service-lb-controller"
I0701 15:50:21.796949       1 cleaner.go:83] "Starting CSR cleaner controller" logger="certificatesigningrequest-cleaner-controller"
I0701 15:50:21.802080       1 shared_informer.go:350] "Waiting for caches to sync" controller="resource quota"
I0701 15:50:21.821420       1 shared_informer.go:350] "Waiting for caches to sync" controller="garbage collector"
I0701 15:50:21.837146       1 shared_informer.go:357] "Caches are synced" controller="validatingadmissionpolicy-status"
I0701 15:50:21.846343       1 shared_informer.go:357] "Caches are synced" controller="service-cidr-controller"
I0701 15:50:21.849336       1 shared_informer.go:357] "Caches are synced" controller="legacy-service-account-token-cleaner"
I0701 15:50:21.849336       1 shared_informer.go:357] "Caches are synced" controller="certificate-csrapproving"
I0701 15:50:21.849345       1 shared_informer.go:357] "Caches are synced" controller="job"
I0701 15:50:21.850421       1 shared_informer.go:357] "Caches are synced" controller="ClusterRoleAggregator"
I0701 15:50:21.850924       1 shared_informer.go:357] "Caches are synced" controller="stateful set"
I0701 15:50:21.866185       1 shared_informer.go:357] "Caches are synced" controller="cronjob"
I0701 15:50:21.866192       1 shared_informer.go:357] "Caches are synced" controller="ephemeral"
I0701 15:50:21.872488       1 shared_informer.go:357] "Caches are synced" controller="expand"
I0701 15:50:21.878799       1 shared_informer.go:357] "Caches are synced" controller="TTL after finished"
I0701 15:50:21.897407       1 shared_informer.go:357] "Caches are synced" controller="HPA"
I0701 15:50:21.898590       1 shared_informer.go:357] "Caches are synced" controller="certificate-csrsigning-kubelet-client"
I0701 15:50:21.898601       1 shared_informer.go:357] "Caches are synced" controller="certificate-csrsigning-kubelet-serving"
I0701 15:50:21.898630       1 shared_informer.go:357] "Caches are synced" controller="endpoint"
I0701 15:50:21.898712       1 shared_informer.go:357] "Caches are synced" controller="certificate-csrsigning-kube-apiserver-client"
I0701 15:50:21.898777       1 shared_informer.go:357] "Caches are synced" controller="crt configmap"
I0701 15:50:21.899242       1 shared_informer.go:357] "Caches are synced" controller="ReplicationController"
I0701 15:50:21.899263       1 shared_informer.go:357] "Caches are synced" controller="certificate-csrsigning-legacy-unknown"
I0701 15:50:21.900470       1 shared_informer.go:357] "Caches are synced" controller="PV protection"
I0701 15:50:21.901641       1 shared_informer.go:357] "Caches are synced" controller="service account"
I0701 15:50:21.902641       1 shared_informer.go:357] "Caches are synced" controller="PVC protection"
I0701 15:50:21.906516       1 shared_informer.go:357] "Caches are synced" controller="namespace"
I0701 15:50:21.914837       1 shared_informer.go:357] "Caches are synced" controller="bootstrap_signer"
I0701 15:50:22.103540       1 actual_state_of_world.go:541] "Failed to update statusUpdateNeeded field in actual state of world" logger="persistentvolume-attach-detach-controller" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"minikube\" does not exist"
I0701 15:50:22.108323       1 shared_informer.go:357] "Caches are synced" controller="GC"
I0701 15:50:22.148319       1 shared_informer.go:357] "Caches are synced" controller="taint"
I0701 15:50:22.148433       1 node_lifecycle_controller.go:1221] "Initializing eviction metric for zone" logger="node-lifecycle-controller" zone=""
I0701 15:50:22.148498       1 node_lifecycle_controller.go:873] "Missing timestamp for Node. Assuming now as a timestamp" logger="node-lifecycle-controller" node="minikube"
I0701 15:50:22.148588       1 node_lifecycle_controller.go:1067] "Controller detected that zone is now in new state" logger="node-lifecycle-controller" zone="" newState="Normal"
I0701 15:50:22.148655       1 shared_informer.go:357] "Caches are synced" controller="persistent volume"
I0701 15:50:22.148778       1 shared_informer.go:357] "Caches are synced" controller="endpoint_slice_mirroring"
I0701 15:50:22.152519       1 shared_informer.go:357] "Caches are synced" controller="node"
I0701 15:50:22.152593       1 range_allocator.go:177] "Sending events to api server" logger="node-ipam-controller"
I0701 15:50:22.152703       1 range_allocator.go:183] "Starting range CIDR allocator" logger="node-ipam-controller"
I0701 15:50:22.152717       1 shared_informer.go:350] "Waiting for caches to sync" controller="cidrallocator"
I0701 15:50:22.152843       1 shared_informer.go:357] "Caches are synced" controller="cidrallocator"
I0701 15:50:22.153366       1 shared_informer.go:357] "Caches are synced" controller="endpoint_slice"
I0701 15:50:22.158891       1 shared_informer.go:357] "Caches are synced" controller="resource quota"
I0701 15:50:22.160163       1 shared_informer.go:357] "Caches are synced" controller="daemon sets"
I0701 15:50:22.165748       1 range_allocator.go:428] "Set node PodCIDR" logger="node-ipam-controller" node="minikube" podCIDRs=["10.244.0.0/24"]
I0701 15:50:22.198138       1 shared_informer.go:357] "Caches are synced" controller="disruption"
I0701 15:50:22.199293       1 shared_informer.go:357] "Caches are synced" controller="deployment"
I0701 15:50:22.199297       1 shared_informer.go:357] "Caches are synced" controller="taint-eviction-controller"
I0701 15:50:22.199892       1 shared_informer.go:357] "Caches are synced" controller="TTL"
I0701 15:50:22.199979       1 shared_informer.go:357] "Caches are synced" controller="attach detach"
I0701 15:50:22.202433       1 shared_informer.go:357] "Caches are synced" controller="resource quota"
I0701 15:50:22.249245       1 shared_informer.go:357] "Caches are synced" controller="ReplicaSet"
I0701 15:50:22.621500       1 shared_informer.go:357] "Caches are synced" controller="garbage collector"
I0701 15:50:22.647909       1 shared_informer.go:357] "Caches are synced" controller="garbage collector"
I0701 15:50:22.647924       1 garbagecollector.go:154] "Garbage collector: all resource monitors have synced" logger="garbage-collector-controller"
I0701 15:50:22.647932       1 garbagecollector.go:157] "Proceeding to collect garbage" logger="garbage-collector-controller"


==> kube-proxy [c463a5319ea9] <==
I0701 15:50:24.036084       1 server_linux.go:63] "Using iptables proxy"
I0701 15:50:24.170343       1 server.go:715] "Successfully retrieved node IP(s)" IPs=["192.168.49.2"]
E0701 15:50:24.170485       1 server.go:245] "Kube-proxy configuration may be incomplete or incorrect" err="nodePortAddresses is unset; NodePort connections will be accepted on all local IPs. Consider using `--nodeport-addresses primary`"
I0701 15:50:24.203101       1 server.go:254] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I0701 15:50:24.203144       1 server_linux.go:145] "Using iptables Proxier"
I0701 15:50:24.211003       1 proxier.go:243] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses" ipFamily="IPv4"
I0701 15:50:24.212964       1 server.go:516] "Version info" version="v1.33.1"
I0701 15:50:24.212996       1 server.go:518] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0701 15:50:24.219318       1 config.go:440] "Starting serviceCIDR config controller"
I0701 15:50:24.219343       1 shared_informer.go:350] "Waiting for caches to sync" controller="serviceCIDR config"
I0701 15:50:24.219457       1 config.go:199] "Starting service config controller"
I0701 15:50:24.219466       1 shared_informer.go:350] "Waiting for caches to sync" controller="service config"
I0701 15:50:24.219485       1 config.go:105] "Starting endpoint slice config controller"
I0701 15:50:24.219491       1 shared_informer.go:350] "Waiting for caches to sync" controller="endpoint slice config"
I0701 15:50:24.220552       1 config.go:329] "Starting node config controller"
I0701 15:50:24.220573       1 shared_informer.go:350] "Waiting for caches to sync" controller="node config"
I0701 15:50:24.319511       1 shared_informer.go:357] "Caches are synced" controller="serviceCIDR config"
I0701 15:50:24.319540       1 shared_informer.go:357] "Caches are synced" controller="endpoint slice config"
I0701 15:50:24.319562       1 shared_informer.go:357] "Caches are synced" controller="service config"
I0701 15:50:24.320864       1 shared_informer.go:357] "Caches are synced" controller="node config"


==> kube-scheduler [b3b75c8c137c] <==
I0701 15:50:13.479922       1 serving.go:386] Generated self-signed cert in-memory
W0701 15:50:15.196489       1 requestheader_controller.go:204] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0701 15:50:15.196764       1 authentication.go:397] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0701 15:50:15.196934       1 authentication.go:398] Continuing without authentication configuration. This may treat all requests as anonymous.
W0701 15:50:15.197082       1 authentication.go:399] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0701 15:50:15.219722       1 server.go:171] "Starting Kubernetes Scheduler" version="v1.33.1"
I0701 15:50:15.219740       1 server.go:173] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0701 15:50:15.221753       1 configmap_cafile_content.go:205] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0701 15:50:15.221796       1 shared_informer.go:350] "Waiting for caches to sync" controller="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0701 15:50:15.222095       1 secure_serving.go:211] Serving securely on 127.0.0.1:10259
I0701 15:50:15.222703       1 tlsconfig.go:243] "Starting DynamicServingCertificateController"
E0701 15:50:15.226200       1 reflector.go:200] "Failed to watch" err="failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"" logger="UnhandledError" reflector="runtime/asm_amd64.s:1700" type="*v1.ConfigMap"
E0701 15:50:15.226721       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Service"
E0701 15:50:15.226892       1 reflector.go:200] "Failed to watch" err="failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumes\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PersistentVolume"
E0701 15:50:15.226969       1 reflector.go:200] "Failed to watch" err="failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ReplicaSet"
E0701 15:50:15.226959       1 reflector.go:200] "Failed to watch" err="failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PodDisruptionBudget"
E0701 15:50:15.227163       1 reflector.go:200] "Failed to watch" err="failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSINode"
E0701 15:50:15.229624       1 reflector.go:200] "Failed to watch" err="failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.StorageClass"
E0701 15:50:15.229624       1 reflector.go:200] "Failed to watch" err="failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ReplicationController"
E0701 15:50:15.229715       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Pod"
E0701 15:50:15.229765       1 reflector.go:200] "Failed to watch" err="failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.StatefulSet"
E0701 15:50:15.229989       1 reflector.go:200] "Failed to watch" err="failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"volumeattachments\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.VolumeAttachment"
E0701 15:50:15.230017       1 reflector.go:200] "Failed to watch" err="failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PersistentVolumeClaim"
E0701 15:50:15.230042       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Namespace: namespaces is forbidden: User \"system:kube-scheduler\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Namespace"
E0701 15:50:15.230088       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Node: nodes is forbidden: User \"system:kube-scheduler\" cannot list resource \"nodes\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Node"
E0701 15:50:15.230137       1 reflector.go:200] "Failed to watch" err="failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csistoragecapacities\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSIStorageCapacity"
E0701 15:50:15.230119       1 reflector.go:200] "Failed to watch" err="failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csidrivers\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSIDriver"
E0701 15:50:16.072530       1 reflector.go:200] "Failed to watch" err="failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PodDisruptionBudget"
E0701 15:50:16.082167       1 reflector.go:200] "Failed to watch" err="failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.StatefulSet"
E0701 15:50:16.120490       1 reflector.go:200] "Failed to watch" err="failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSINode"
E0701 15:50:16.134035       1 reflector.go:200] "Failed to watch" err="failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PersistentVolumeClaim"
E0701 15:50:16.143306       1 reflector.go:200] "Failed to watch" err="failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"" logger="UnhandledError" reflector="runtime/asm_amd64.s:1700" type="*v1.ConfigMap"
E0701 15:50:16.191508       1 reflector.go:200] "Failed to watch" err="failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumes\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PersistentVolume"
E0701 15:50:16.205892       1 reflector.go:200] "Failed to watch" err="failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"volumeattachments\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.VolumeAttachment"
E0701 15:50:16.368541       1 reflector.go:200] "Failed to watch" err="failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csistoragecapacities\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSIStorageCapacity"
E0701 15:50:16.489828       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Pod"
I0701 15:50:18.322454       1 shared_informer.go:357] "Caches are synced" controller="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"


==> kubelet <==
Jul 01 15:50:17 minikube kubelet[2441]: E0701 15:50:17.885194    2441 eviction_manager.go:267] "eviction manager: failed to check if we have separate container filesystem. Ignoring." err="no imagefs label for configured runtime"
Jul 01 15:50:17 minikube kubelet[2441]: I0701 15:50:17.943548    2441 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/kube-apiserver-minikube"
Jul 01 15:50:17 minikube kubelet[2441]: I0701 15:50:17.943691    2441 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/etcd-minikube"
Jul 01 15:50:17 minikube kubelet[2441]: I0701 15:50:17.943759    2441 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/kube-scheduler-minikube"
Jul 01 15:50:17 minikube kubelet[2441]: I0701 15:50:17.944056    2441 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/kube-controller-manager-minikube"
Jul 01 15:50:17 minikube kubelet[2441]: E0701 15:50:17.955288    2441 kubelet.go:3311] "Failed creating a mirror pod" err="pods \"kube-apiserver-minikube\" already exists" pod="kube-system/kube-apiserver-minikube"
Jul 01 15:50:17 minikube kubelet[2441]: I0701 15:50:17.986009    2441 kubelet_node_status.go:75] "Attempting to register node" node="minikube"
Jul 01 15:50:17 minikube kubelet[2441]: I0701 15:50:17.993515    2441 kubelet_node_status.go:124] "Node was previously registered" node="minikube"
Jul 01 15:50:17 minikube kubelet[2441]: I0701 15:50:17.993598    2441 kubelet_node_status.go:78] "Successfully registered node" node="minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.022456    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/78e1292e1d47cc7d09b2c6f5826fa624-etc-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"78e1292e1d47cc7d09b2c6f5826fa624\") " pod="kube-system/kube-apiserver-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.023070    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/78e1292e1d47cc7d09b2c6f5826fa624-usr-local-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"78e1292e1d47cc7d09b2c6f5826fa624\") " pod="kube-system/kube-apiserver-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.023130    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/78e1292e1d47cc7d09b2c6f5826fa624-usr-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"78e1292e1d47cc7d09b2c6f5826fa624\") " pod="kube-system/kube-apiserver-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.023155    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-ca-certs\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.023212    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-etc-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.023274    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-certs\" (UniqueName: \"kubernetes.io/host-path/3924ef3609584191d8d09190210d2d78-etcd-certs\") pod \"etcd-minikube\" (UID: \"3924ef3609584191d8d09190210d2d78\") " pod="kube-system/etcd-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.023792    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-data\" (UniqueName: \"kubernetes.io/host-path/3924ef3609584191d8d09190210d2d78-etcd-data\") pod \"etcd-minikube\" (UID: \"3924ef3609584191d8d09190210d2d78\") " pod="kube-system/etcd-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.023835    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-usr-local-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.023870    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/78e1292e1d47cc7d09b2c6f5826fa624-ca-certs\") pod \"kube-apiserver-minikube\" (UID: \"78e1292e1d47cc7d09b2c6f5826fa624\") " pod="kube-system/kube-apiserver-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.023903    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/78e1292e1d47cc7d09b2c6f5826fa624-k8s-certs\") pod \"kube-apiserver-minikube\" (UID: \"78e1292e1d47cc7d09b2c6f5826fa624\") " pod="kube-system/kube-apiserver-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.023924    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"flexvolume-dir\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-flexvolume-dir\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.023947    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-k8s-certs\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.023974    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-kubeconfig\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.024004    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/feee622ba49882ef945e2406d3ba86df-kubeconfig\") pod \"kube-scheduler-minikube\" (UID: \"feee622ba49882ef945e2406d3ba86df\") " pod="kube-system/kube-scheduler-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.024035    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-usr-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.802312    2441 apiserver.go:52] "Watching apiserver"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.814906    2441 desired_state_of_world_populator.go:158] "Finished populating initial desired state of world"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.939367    2441 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/kube-apiserver-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.939950    2441 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/kube-controller-manager-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.948657    2441 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/etcd-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: I0701 15:50:18.948947    2441 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/kube-scheduler-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: E0701 15:50:18.969578    2441 kubelet.go:3311] "Failed creating a mirror pod" err="pods \"kube-apiserver-minikube\" already exists" pod="kube-system/kube-apiserver-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: E0701 15:50:18.987640    2441 kubelet.go:3311] "Failed creating a mirror pod" err="pods \"kube-controller-manager-minikube\" already exists" pod="kube-system/kube-controller-manager-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: E0701 15:50:18.998610    2441 kubelet.go:3311] "Failed creating a mirror pod" err="pods \"kube-scheduler-minikube\" already exists" pod="kube-system/kube-scheduler-minikube"
Jul 01 15:50:18 minikube kubelet[2441]: E0701 15:50:18.998866    2441 kubelet.go:3311] "Failed creating a mirror pod" err="pods \"etcd-minikube\" already exists" pod="kube-system/etcd-minikube"
Jul 01 15:50:19 minikube kubelet[2441]: I0701 15:50:19.033935    2441 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/etcd-minikube" podStartSLOduration=2.033912544 podStartE2EDuration="2.033912544s" podCreationTimestamp="2025-07-01 15:50:17 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-07-01 15:50:19.01047822 +0000 UTC m=+1.280341426" watchObservedRunningTime="2025-07-01 15:50:19.033912544 +0000 UTC m=+1.303775751"
Jul 01 15:50:19 minikube kubelet[2441]: I0701 15:50:19.034368    2441 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-scheduler-minikube" podStartSLOduration=2.034356908 podStartE2EDuration="2.034356908s" podCreationTimestamp="2025-07-01 15:50:17 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-07-01 15:50:19.032272293 +0000 UTC m=+1.302135493" watchObservedRunningTime="2025-07-01 15:50:19.034356908 +0000 UTC m=+1.304220101"
Jul 01 15:50:19 minikube kubelet[2441]: I0701 15:50:19.073212    2441 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-apiserver-minikube" podStartSLOduration=3.07319158 podStartE2EDuration="3.07319158s" podCreationTimestamp="2025-07-01 15:50:16 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-07-01 15:50:19.058968098 +0000 UTC m=+1.328831300" watchObservedRunningTime="2025-07-01 15:50:19.07319158 +0000 UTC m=+1.343054779"
Jul 01 15:50:19 minikube kubelet[2441]: I0701 15:50:19.073423    2441 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-controller-manager-minikube" podStartSLOduration=2.073410877 podStartE2EDuration="2.073410877s" podCreationTimestamp="2025-07-01 15:50:17 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-07-01 15:50:19.072646278 +0000 UTC m=+1.342509483" watchObservedRunningTime="2025-07-01 15:50:19.073410877 +0000 UTC m=+1.343274076"
Jul 01 15:50:22 minikube kubelet[2441]: I0701 15:50:22.255374    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"tmp\" (UniqueName: \"kubernetes.io/host-path/4b469400-f465-407b-847c-9f6c15f92f46-tmp\") pod \"storage-provisioner\" (UID: \"4b469400-f465-407b-847c-9f6c15f92f46\") " pod="kube-system/storage-provisioner"
Jul 01 15:50:22 minikube kubelet[2441]: I0701 15:50:22.255429    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-nztcw\" (UniqueName: \"kubernetes.io/projected/4b469400-f465-407b-847c-9f6c15f92f46-kube-api-access-nztcw\") pod \"storage-provisioner\" (UID: \"4b469400-f465-407b-847c-9f6c15f92f46\") " pod="kube-system/storage-provisioner"
Jul 01 15:50:22 minikube kubelet[2441]: E0701 15:50:22.361986    2441 projected.go:289] Couldn't get configMap kube-system/kube-root-ca.crt: configmap "kube-root-ca.crt" not found
Jul 01 15:50:22 minikube kubelet[2441]: E0701 15:50:22.362014    2441 projected.go:194] Error preparing data for projected volume kube-api-access-nztcw for pod kube-system/storage-provisioner: configmap "kube-root-ca.crt" not found
Jul 01 15:50:22 minikube kubelet[2441]: E0701 15:50:22.362106    2441 nestedpendingoperations.go:348] Operation for "{volumeName:kubernetes.io/projected/4b469400-f465-407b-847c-9f6c15f92f46-kube-api-access-nztcw podName:4b469400-f465-407b-847c-9f6c15f92f46 nodeName:}" failed. No retries permitted until 2025-07-01 15:50:22.862076584 +0000 UTC m=+5.131939778 (durationBeforeRetry 500ms). Error: MountVolume.SetUp failed for volume "kube-api-access-nztcw" (UniqueName: "kubernetes.io/projected/4b469400-f465-407b-847c-9f6c15f92f46-kube-api-access-nztcw") pod "storage-provisioner" (UID: "4b469400-f465-407b-847c-9f6c15f92f46") : configmap "kube-root-ca.crt" not found
Jul 01 15:50:22 minikube kubelet[2441]: I0701 15:50:22.960510    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-proxy\" (UniqueName: \"kubernetes.io/configmap/56b8f83e-2ada-49ab-b7ad-7ae929d7c913-kube-proxy\") pod \"kube-proxy-kh9z2\" (UID: \"56b8f83e-2ada-49ab-b7ad-7ae929d7c913\") " pod="kube-system/kube-proxy-kh9z2"
Jul 01 15:50:22 minikube kubelet[2441]: I0701 15:50:22.960560    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"lib-modules\" (UniqueName: \"kubernetes.io/host-path/56b8f83e-2ada-49ab-b7ad-7ae929d7c913-lib-modules\") pod \"kube-proxy-kh9z2\" (UID: \"56b8f83e-2ada-49ab-b7ad-7ae929d7c913\") " pod="kube-system/kube-proxy-kh9z2"
Jul 01 15:50:22 minikube kubelet[2441]: I0701 15:50:22.960584    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"xtables-lock\" (UniqueName: \"kubernetes.io/host-path/56b8f83e-2ada-49ab-b7ad-7ae929d7c913-xtables-lock\") pod \"kube-proxy-kh9z2\" (UID: \"56b8f83e-2ada-49ab-b7ad-7ae929d7c913\") " pod="kube-system/kube-proxy-kh9z2"
Jul 01 15:50:22 minikube kubelet[2441]: I0701 15:50:22.960619    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-x5xv6\" (UniqueName: \"kubernetes.io/projected/56b8f83e-2ada-49ab-b7ad-7ae929d7c913-kube-api-access-x5xv6\") pod \"kube-proxy-kh9z2\" (UID: \"56b8f83e-2ada-49ab-b7ad-7ae929d7c913\") " pod="kube-system/kube-proxy-kh9z2"
Jul 01 15:50:23 minikube kubelet[2441]: I0701 15:50:23.162405    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/25841b90-06a3-4ed0-b65f-da84f9efa067-config-volume\") pod \"coredns-674b8bbfcf-zj4cm\" (UID: \"25841b90-06a3-4ed0-b65f-da84f9efa067\") " pod="kube-system/coredns-674b8bbfcf-zj4cm"
Jul 01 15:50:23 minikube kubelet[2441]: I0701 15:50:23.162453    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-9gczx\" (UniqueName: \"kubernetes.io/projected/25841b90-06a3-4ed0-b65f-da84f9efa067-kube-api-access-9gczx\") pod \"coredns-674b8bbfcf-zj4cm\" (UID: \"25841b90-06a3-4ed0-b65f-da84f9efa067\") " pod="kube-system/coredns-674b8bbfcf-zj4cm"
Jul 01 15:50:23 minikube kubelet[2441]: I0701 15:50:23.999740    2441 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-proxy-kh9z2" podStartSLOduration=1.99972049 podStartE2EDuration="1.99972049s" podCreationTimestamp="2025-07-01 15:50:22 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-07-01 15:50:23.984525976 +0000 UTC m=+6.254389176" watchObservedRunningTime="2025-07-01 15:50:23.99972049 +0000 UTC m=+6.269583691"
Jul 01 15:50:24 minikube kubelet[2441]: I0701 15:50:24.012354    2441 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/storage-provisioner" podStartSLOduration=5.012337055 podStartE2EDuration="5.012337055s" podCreationTimestamp="2025-07-01 15:50:19 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-07-01 15:50:24.00072343 +0000 UTC m=+6.270586642" watchObservedRunningTime="2025-07-01 15:50:24.012337055 +0000 UTC m=+6.282200250"
Jul 01 15:50:25 minikube kubelet[2441]: I0701 15:50:25.644691    2441 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/coredns-674b8bbfcf-zj4cm" podStartSLOduration=2.644671874 podStartE2EDuration="2.644671874s" podCreationTimestamp="2025-07-01 15:50:23 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-07-01 15:50:24.012761567 +0000 UTC m=+6.282624763" watchObservedRunningTime="2025-07-01 15:50:25.644671874 +0000 UTC m=+7.914535074"
Jul 01 15:50:28 minikube kubelet[2441]: I0701 15:50:28.334743    2441 kuberuntime_manager.go:1746] "Updating runtime config through cri with podcidr" CIDR="10.244.0.0/24"
Jul 01 15:50:28 minikube kubelet[2441]: I0701 15:50:28.335505    2441 kubelet_network.go:61] "Updating Pod CIDR" originalPodCIDR="" newPodCIDR="10.244.0.0/24"
Jul 01 15:50:30 minikube kubelet[2441]: I0701 15:50:30.489210    2441 prober_manager.go:312] "Failed to trigger a manual run" probe="Readiness"
Jul 01 15:50:54 minikube kubelet[2441]: I0701 15:50:54.145626    2441 scope.go:117] "RemoveContainer" containerID="01131fbdf71ade9bdb8793e54b625669825aef5f41a82bdbc471d961d3ee15b3"
Jul 01 15:52:30 minikube kubelet[2441]: I0701 15:52:30.415586    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"pvc-0977ce1d-d45c-431a-997f-da0ad8453c8d\" (UniqueName: \"kubernetes.io/host-path/56a8d432-6749-4082-bce8-3c2a85d7a208-pvc-0977ce1d-d45c-431a-997f-da0ad8453c8d\") pod \"postgres-676898fc79-24zfv\" (UID: \"56a8d432-6749-4082-bce8-3c2a85d7a208\") " pod="default/postgres-676898fc79-24zfv"
Jul 01 15:52:30 minikube kubelet[2441]: I0701 15:52:30.415631    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-dgnlm\" (UniqueName: \"kubernetes.io/projected/56a8d432-6749-4082-bce8-3c2a85d7a208-kube-api-access-dgnlm\") pod \"postgres-676898fc79-24zfv\" (UID: \"56a8d432-6749-4082-bce8-3c2a85d7a208\") " pod="default/postgres-676898fc79-24zfv"
Jul 01 15:52:30 minikube kubelet[2441]: I0701 15:52:30.713419    2441 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="13cd8f93f93a475983081bbad3997dff01aac538d63e3909be1b1586a1c58e06"
Jul 01 15:52:42 minikube kubelet[2441]: I0701 15:52:42.396091    2441 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-n7t4c\" (UniqueName: \"kubernetes.io/projected/8fe908de-5c2e-456b-8156-7c5bd09ce65b-kube-api-access-n7t4c\") pod \"django-app-7c87747dfb-t99hl\" (UID: \"8fe908de-5c2e-456b-8156-7c5bd09ce65b\") " pod="default/django-app-7c87747dfb-t99hl"


==> storage-provisioner [01131fbdf71a] <==
I0701 15:50:23.619632       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
F0701 15:50:53.634548       1 main.go:39] error getting server version: Get "https://10.96.0.1:443/version?timeout=32s": dial tcp 10.96.0.1:443: i/o timeout


==> storage-provisioner [bb32d91259e2] <==
W0701 15:52:49.101462       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:52:49.108509       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:52:51.110582       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:52:51.118375       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:52:53.123795       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:52:53.131182       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:52:55.133662       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:52:55.140709       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:52:57.143412       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:52:57.150334       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:52:59.152702       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:52:59.155992       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:01.157998       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:01.165110       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:03.167608       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:03.174917       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:05.177635       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:05.184946       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:07.186740       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:07.194477       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:09.197156       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:09.201989       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:11.203975       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:11.207049       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:13.209072       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:13.216907       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:15.219003       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:15.227740       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:17.230521       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:17.237858       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:19.240420       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:19.247830       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:21.250584       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:21.257683       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:23.259481       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:23.266449       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:25.269079       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:25.276004       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:27.278874       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:27.286247       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:29.288840       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:29.295235       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:31.297607       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:31.300727       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:33.302738       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:33.305652       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:35.307946       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:35.311604       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:37.314202       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:37.320893       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:39.323257       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:39.329783       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:41.331677       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:41.338621       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:43.341243       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:43.344239       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:45.346584       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:45.353602       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:47.356282       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0701 15:53:47.359693       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice

